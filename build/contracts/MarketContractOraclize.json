{
  "contractName": "MarketContractOraclize",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPriceQueryResult",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_DECIMAL_PLACES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCollateralPoolContractLinked",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QUERY_CALLBACK_GAS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getQtyFilledOrCancelledFromOrder",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_DATA_SOURCE",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_QUERY",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MKT_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "orderAddresses",
          "type": "address[3]"
        },
        {
          "name": "unsignedOrderValues",
          "type": "uint256[5]"
        },
        {
          "name": "orderQty",
          "type": "int256"
        },
        {
          "name": "qtyToFill",
          "type": "int256"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "tradeOrder",
      "outputs": [
        {
          "name": "filledQty",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MARKET_COLLATERAL_POOL_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_CAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXPIRATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "setCollateralPoolContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_FLOOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QTY_MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_POOL_FACTORY_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "transferCreator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "orderAddresses",
          "type": "address[3]"
        },
        {
          "name": "unsignedOrderValues",
          "type": "uint256[5]"
        },
        {
          "name": "orderQty",
          "type": "int256"
        },
        {
          "name": "qtyToCancel",
          "type": "int256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [
        {
          "name": "qtyCancelled",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractName",
          "type": "string"
        },
        {
          "name": "creatorAddress",
          "type": "address"
        },
        {
          "name": "marketTokenAddress",
          "type": "address"
        },
        {
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "name": "collateralPoolFactoryAddress",
          "type": "address"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[5]"
        },
        {
          "name": "oracleDataSource",
          "type": "string"
        },
        {
          "name": "oracleQuery",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "UpdatedLastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "settlePrice",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "UpdatedUserBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "UpdatedPoolBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "errorCode",
          "type": "uint8"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "Error",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "filledQty",
          "type": "int256"
        },
        {
          "indexed": false,
          "name": "paidMakerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "paidTakerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cancelledQty",
          "type": "int256"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "currentCreator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestEarlySettlement",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "queryID",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f14610164578063053f14da146101bb5780630c8eb675146101e657806327dc297e146102765780632fed1b00146102ed578063323bb775146103185780633270bb5b1461036f57806338bbfa501461039e5780633b3c4ae91461045b578063411449bb1461048a5780634c258eb1146104b557806356357d91146104fa5780635ea7867a1461058a578063614d08f81461061a5780636db7f77c146106aa578063798ddbc8146106b4578063930a9d921461070b578063a8e77c9a14610793578063b5471dee146107ea578063bb4b573414610815578063c201293b14610840578063c32b1dfa14610883578063ca361d67146108ae578063d514d12c146108d9578063f348e8b214610930578063fa3fa1961461095b578063fc51b9c51461099e575b600080fd5b34801561017057600080fd5b506101796109fd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c757600080fd5b506101d0610a22565b6040518082815260200191505060405180910390f35b3480156101f257600080fd5b506101fb610a28565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023b578082015181840152602081019050610220565b50505050905090810190601f1680156102685780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028257600080fd5b506102eb6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ac6565b005b3480156102f957600080fd5b50610302610b09565b6040518082815260200191505060405180910390f35b34801561032457600080fd5b5061032d610b0f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037b57600080fd5b50610384610b35565b604051808215151515815260200191505060405180910390f35b3480156103aa57600080fd5b506104596004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610b48565b005b34801561046757600080fd5b50610470610cba565b604051808215151515815260200191505060405180910390f35b34801561049657600080fd5b5061049f610ccd565b6040518082815260200191505060405180910390f35b3480156104c157600080fd5b506104e46004803603810190808035600019169060200190929190505050610cd4565b6040518082815260200191505060405180910390f35b34801561050657600080fd5b5061050f610cf1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561054f578082015181840152602081019050610534565b50505050905090810190601f16801561057c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561059657600080fd5b5061059f610d8f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105df5780820151818401526020810190506105c4565b50505050905090810190601f16801561060c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561062657600080fd5b5061062f610e2d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561066f578082015181840152602081019050610654565b50505050905090810190601f16801561069c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106b2610ecb565b005b3480156106c057600080fd5b506106c9611119565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561071757600080fd5b5061077d600480360381019080806060019091929192908060a0019091929192908035906020019092919080359060200190929190803560ff1690602001909291908035600019169060200190929190803560001916906020019092919050505061113f565b6040518082815260200191505060405180910390f35b34801561079f57600080fd5b506107a8611b0f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107f657600080fd5b506107ff611b35565b6040518082815260200191505060405180910390f35b34801561082157600080fd5b5061082a611b3b565b6040518082815260200191505060405180910390f35b34801561084c57600080fd5b50610881600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b41565b005b34801561088f57600080fd5b50610898611d8f565b6040518082815260200191505060405180910390f35b3480156108ba57600080fd5b506108c3611d95565b6040518082815260200191505060405180910390f35b3480156108e557600080fd5b506108ee611d9b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561093c57600080fd5b50610945611dc1565b6040518082815260200191505060405180910390f35b34801561096757600080fd5b5061099c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc7565b005b3480156109aa57600080fd5b506109e7600480360381019080806060019091929192908060a0019091929192908035906020019092919080359060200190929190505050611f1c565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b60168054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abe5780601f10610a9357610100808354040283529160200191610abe565b820191906000526020600020905b815481529060010190602001808311610aa157829003601f168201915b505050505081565b610b05828260006040519080825280601f01601f191660200182016040528015610aff5781602001602082028038833980820191505090505b50610b48565b5050565b60085481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60009054906101000a900460ff1681565b610b506121a0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b8957600080fd5b60176000846000191660001916815260200190815260200160002060009054906101000a900460ff161515610bbd57600080fd5b8160169080519060200190610bd3929190613e85565b50610be082600854612502565b600b819055507f3e19f2256bddc30aeab8054ccbd86723452d07f687b94441de69c05ee212dafa826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c48578082015181840152602081019050610c2d565b50505050905090810190601f168015610c755780820380516001836020036101000a031916815260200191505b509250505060405180910390a1610c8a6127f6565b60176000846000191660001916815260200190815260200160002060006101000a81549060ff0219169055505050565b600d60019054906101000a900460ff1681565b620249f081565b6000610cea82600f6128c690919063ffffffff16565b9050919050565b60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d875780601f10610d5c57610100808354040283529160200191610d87565b820191906000526020600020905b815481529060010190602001808311610d6a57829003601f168201915b505050505081565b60158054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b505050505081565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ec35780601f10610e9857610100808354040283529160200191610ec3565b820191906000526020600020905b815481529060010190602001808311610ea657829003601f168201915b505050505081565b600080610f7560148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f675780601f10610f3c57610100808354040283529160200191610f67565b820191906000526020600020905b815481529060010190602001808311610f4a57829003601f168201915b5050505050620249f061291d565b9150813410151515610f8657600080fd5b6110c860148054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561101f5780601f10610ff45761010080835404028352916020019161101f565b820191906000526020600020905b81548152906001019060200180831161100257829003601f168201915b505050505060158054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110ba5780601f1061108f576101008083540402835291602001916110ba565b820191906000526020600020905b81548152906001019060200180831161109d57829003601f168201915b5050505050620249f0612cfa565b905060006001028160001916141515156110e157600080fd5b600160176000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611149613f05565b6000806000806000600d60019054906101000a900460ff16801561117a5750600d60009054906101000a900460ff16155b151561118557600080fd5b60008c14158015611197575060008b14155b80156111b257506111b18b8d61328d90919063ffffffff16565b5b15156111bd57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f30336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156112ae57600080fd5b505af11580156112c2573d6000803e3d6000fd5b505050506040513d60208110156112d857600080fd5b810190808051906020019092919050505015156112f457600080fd5b61136b8e600380602002604051908101604052809291908260036020028082843782019150505050508e600580602002604051908101604052809291908260056020028082843782019150505050508e3073ffffffffffffffffffffffffffffffffffffffff166132a7909392919063ffffffff16565b9550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f3088600001516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561146257600080fd5b505af1158015611476573d6000803e3d6000fd5b505050506040513d602081101561148c57600080fd5b810190808051906020019092919050505015156114a857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16148061151657503373ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16145b151561152157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff161415801561159257503373ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff1614155b151561159d57600080fd5b856000015173ffffffffffffffffffffffffffffffffffffffff1673__OrderLib______________________________638163681e90918861010001518d8d8d6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600019166000191681526020018460ff1660ff168152602001836000191660001916815260200182600019166000191681526020019550505050505060206040518083038186803b15801561169357600080fd5b505af41580156116a7573d6000803e3d6000fd5b505050506040513d60208110156116bd57600080fd5b810190808051906020019092919050505015156116d957600080fd5b8560c00151421015156117325785610100015160001916600060018111156116fd57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611afe565b611752611743876101000151610cd4565b8d61343990919063ffffffff16565b945060008514156117a8578561010001516000191660018081111561177357fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611afe565b6117b2858c613450565b9650600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eeaba0838760000151338a8a60a001516040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b1580156118bd57600080fd5b505af11580156118d1573d6000803e3d6000fd5b505050506118f086610100015188600f6134799092919063ffffffff16565b6000935060009250600073ffffffffffffffffffffffffffffffffffffffff16866040015173ffffffffffffffffffffffffffffffffffffffff16141515611a455761193b876134cf565b9150611946876134cf565b90506000866060015111156119c85761196e828288606001516134ed9092919063ffffffff16565b93506119c78660000151876040015186600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661350d909392919063ffffffff16565b5b600086608001511115611a44576119ee828288608001516134ed9092919063ffffffff16565b9250611a4333876040015185600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661350d909392919063ffffffff16565b5b5b856040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16876000015173ffffffffffffffffffffffffffffffffffffffff167ff756998387aae83a81d5053664c1ed50a128ecd4e82cc2e135b5a2f367841f598a88888c60a001518d61010001516040518086815260200185815260200184815260200183815260200182600019166000191681526020019550505050505060405180910390a48696505b505050505050979650505050505050565b600d60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600a5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b9d57600080fd5b600d60019054906101000a900460ff16151515611bb957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611bf557600080fd5b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff16600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bb55cd26040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611cd357600080fd5b505af1158015611ce7573d6000803e3d6000fd5b505050506040513d6020811015611cfd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515611d3057600080fd5b80600d60026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600d60016101000a81548160ff02191690831515021790555050565b60075481565b60095481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e2257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611e5e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7f11fe0c7098e1a76afcc68f35abaa07ef156fa7d6dd2d39664812fe37348d1660405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611f26613f05565b6000808414158015611f475750611f46858561328d90919063ffffffff16565b5b1515611f5257600080fd5b600d60009054906101000a900460ff16151515611f6e57600080fd5b611fe587600380602002604051908101604052809291908260036020028082843782019150505050508760058060200260405190810160405280929190826005602002808284378201915050505050873073ffffffffffffffffffffffffffffffffffffffff166132a7909392919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614151561202557600080fd5b8160c001514210151561207e57816101000151600019166000600181111561204957fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009250612196565b61209e61208f836101000151610cd4565b8661343990919063ffffffff16565b905060008114156120f457816101000151600019166001808111156120bf57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009250612196565b6120fe8482613450565b925061211b82610100015184600f61362d9092919063ffffffff16565b81610100015160001916826040015173ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff167f7de4479e80e82e22edb1e0010433c8befc804c34988024fa0b0234715102cd8f866040518082815260200191505060405180910390a48292505b5050949350505050565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061221257506000612210601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613683565b145b1561222357612221600061368e565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156122a957600080fd5b505af11580156122bd573d6000803e3d6000fd5b505050506040513d60208110156122d357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561243c57601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156123c057600080fd5b505af11580156123d4573d6000803e3d6000fd5b505050506040513d60208110156123ea57600080fd5b8101908080519060200190929190505050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156124c257600080fd5b505af11580156124d6573d6000803e3d6000fd5b505050506040513d60208110156124ec57600080fd5b8101908080519060200190929190505050905090565b6000606060008060008693506000925060009150600090505b83518110156127d75760307f010000000000000000000000000000000000000000000000000000000000000002848281518110151561255657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015801561266e575060397f01000000000000000000000000000000000000000000000000000000000000000284828151811015156125fe57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561271f578115612691576000861415612687576127d7565b8580600190039650505b600a83029250603084828151811015156126a757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900403830192506127ca565b602e7f010000000000000000000000000000000000000000000000000000000000000002848281518110151561275157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156127c957600191505b5b808060010191505061251b565b60008611156127e95785600a0a830292505b8294505050505092915050565b6000600d60009054906101000a900460ff1615612812576128c3565b600a54421115612841576001600d60006101000a81548160ff021916908315150217905550600b5490506128a3565b600654600b54101515612873576001600d60006101000a81548160ff02191690831515021790555060065490506128a2565b600754600b541115156128a1576001600d60006101000a81548160ff02191690831515021790555060075490505b5b5b600d60009054906101000a900460ff16156128c2576128c18161369f565b5b5b50565b60006129158360010160008460001916600019168152602001908152602001600020548460000160008560001916600019168152602001908152602001600020546136e090919063ffffffff16565b905092915050565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061298f5750600061298d601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613683565b145b156129a05761299e600061368e565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612a2657600080fd5b505af1158015612a3a573d6000803e3d6000fd5b505050506040513d6020811015612a5057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612bb957601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612b3d57600080fd5b505af1158015612b51573d6000803e3d6000fd5b505050506040513d6020811015612b6757600080fd5b8101908080519060200190929190505050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612c6a578082015181840152602081019050612c4f565b50505050905090810190601f168015612c975780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612cb757600080fd5b505af1158015612ccb573d6000803e3d6000fd5b505050506040513d6020811015612ce157600080fd5b8101908080519060200190929190505050905092915050565b6000806000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612d6e57506000612d6c601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613683565b145b15612d7f57612d7d600061368e565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612e0557600080fd5b505af1158015612e19573d6000803e3d6000fd5b505050506040513d6020811015612e2f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612f9857601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612f1c57600080fd5b505af1158015612f30573d6000803e3d6000fd5b505050506040513d6020811015612f4657600080fd5b8101908080519060200190929190505050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561304957808201518184015260208101905061302e565b50505050905090810190601f1680156130765780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561309657600080fd5b505af11580156130aa573d6000803e3d6000fd5b505050506040513d60208110156130c057600080fd5b81019080805190602001909291905050509050601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015613192578082015181840152602081019050613177565b50505050905090810190601f1680156131bf5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156131f85780820151818401526020810190506131dd565b50505050905090810190601f1680156132255780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561324757600080fd5b505af115801561325b573d6000803e3d6000fd5b50505050506040513d602081101561327257600080fd5b81019080805190602001909291905050509150509392505050565b60008183148061329f57506000828402135b905092915050565b6132af613f05565b8360006003811015156132be57fe5b6020020151816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083600160038110151561330957fe5b6020020151816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083600260038110151561335457fe5b6020020151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082600060058110151561339f57fe5b60200201518160600181815250508260016005811015156133bc57fe5b60200201518160800181815250508260026005811015156133d957fe5b60200201518160a00181815250508260036005811015156133f657fe5b60200201518160c0018181525050818160e001818152505061341a85858585613748565b8161010001906000191690816000191681525050809050949350505050565b600061344883836000036136e0565b905092915050565b600061345b826134cf565b613464846134cf565b1061346f5781613471565b825b905092915050565b6134a9818460000160008560001916600019168152602001908152602001600020546136e090919063ffffffff16565b836000016000846000191660001916815260200190815260200160002081905550505050565b6000808212156134e4578160000390506134e8565b8190505b919050565b6000816134fa85856139a2565b81151561350357fe5b0490509392505050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156135e457600080fd5b505af11580156135f8573d6000803e3d6000fd5b505050506040513d602081101561360e57600080fd5b8101908080519060200190929190505050151561362757fe5b50505050565b61365d818460010160008560001916600019168152602001908152602001600020546136e090919063ffffffff16565b836001016000846000191660001916815260200190815260200160002081905550505050565b6000813b9050919050565b60006136986139d5565b9050919050565b80600c819055507f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c816040518082815260200191505060405180910390a150565b60008082840190506136f2848461328d565b151561370057809150613741565b600084121515613726578360ff60019060020a021903831315151561372157fe5b61373d565b8360ff60019060020a0203831215151561373c57fe5b5b8091505b5092915050565b60008484600060038110151561375a57fe5b602002015185600160038110151561376e57fe5b602002015186600260038110151561378257fe5b602002015186600060058110151561379657fe5b60200201518760016005811015156137aa57fe5b60200201518860026005811015156137be57fe5b60200201518960036005811015156137d257fe5b60200201518a60046005811015156137e657fe5b60200201518a604051602001808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018781526020018681526020018581526020018481526020018381526020018281526020019a50505050505050505050506040516020818303038152906040526040518082805190602001908083835b60208310151561396b5780518252602082019150602081019050602083039250613946565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050949350505050565b600080828402905060008414806139c357508284828115156139c057fe5b04145b15156139cb57fe5b8091505092915050565b6000806139f5731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed613683565b1115613a9757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a8e6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613e6b565b60019050613e68565b6000613ab673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1613683565b1115613b585773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613b4f6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613e6b565b60019050613e68565b6000613b7773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e613683565b1115613c195773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613c106040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613e6b565b60019050613e68565b6000613c3873146500cfd35b22e4a392fe0adc06de1a1368ed48613683565b1115613cda5773146500cfd35b22e4a392fe0adc06de1a1368ed48601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613cd16040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613e6b565b60019050613e68565b6000613cf9736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475613683565b1115613d5d57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613e68565b6000613d7c7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf613683565b1115613de0577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613e68565b6000613dff7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa613683565b1115613e63577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050613e68565b600090505b90565b8060139080519060200190613e81929190613e85565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613ec657805160ff1916838001178555613ef4565b82800160010185558215613ef4579182015b82811115613ef3578251825591602001919060010190613ed8565b5b509050613f019190613f97565b5090565b61012060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b613fb991905b80821115613fb5576000816000905550600101613f9d565b5090565b905600a165627a7a72305820a52ccf48e4f2c6de7aa2cc11611e9627242651c5eabcc2d8d6ba2fde0bc057ba0029",
  "sourceMap": "875:5632:13:-;;;2308:5:3;2284:29;;;;;;;;;;;;;;;;;;;;2364:5;2319:50;;;;;;;;;;;;;;;;;;;;2601:1060:13;8:9:-1;5:2;;;30:1;27;20:12;5:2;2601:1060:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2918:12;2940:14;2964:18;2992:22;3024:28;3062:13;1017:10:0;1007:7;;:20;;;;;;;;;;;;;;;;;;4580:28:3;4546:31;;:62;;;;;;;;;;;;;;;;;;4638:18;4618:17;;:38;;;;;;;;;;;;;;;;;;4690:18;4666:9;;:43;;;;;;;;;;;;;;;;;;4727:9;;;;;;;;;;;:48;;;4776:10;4727:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4727:60:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4727:60:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4727:60:3;;;;;;;;;;;;;;;;4719:69;;;;;;;;4845:13;4859:1;4845:16;;;;;;;;;;;;;4831:11;:30;;;;4883:13;4897:1;4883:16;;;;;;;;;;;;;4871:9;:28;;;;4929:11;;4917:9;;:23;4909:32;;;;;;;;4975:13;4989:1;4975:16;;;;;;;;;;;;;4952:20;:39;;;;5018:13;5032:1;5018:16;;;;;;;;;;;;;5001:14;:33;;;;5057:13;5071:1;5057:16;;;;;;;;;;;;;5044:10;:29;;;;5104:3;5091:10;;:16;5083:25;;;;;;;;5135:12;5119:13;:28;;;;;;;;;;;;:::i;:::-;;5184:22;5157:24;;:49;;;;;;;;;;;;;;;;;;5226:14;5216:7;;:24;;;;;;;;;;;;;;;;;;4293:954;;;;;;3104:58:13;1928:4:17;3144:17:13;;1884:4:17;3122:19:13;;:39;3104:17;;;:58;;;:::i;:::-;3303:16;3282:18;:37;;;;;;;;;;;;:::i;:::-;;3344:11;3329:12;:26;;;;;;;;;;;;:::i;:::-;;3544:7;3537:3;3524:10;;:16;:27;;3516:36;;;;;;;;3562:13;:11;;;:13;;;:::i;:::-;2601:1060;;;;;;;;875:5632;;6602:114:17;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;;;:25;;;:::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;;;:35;;;:::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:17;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:17;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6680:8;;;;;;;;;;;:21;;;6702:6;6680:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6680:29:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6680:29:17;;;;6602:114;:::o;5573:932:13:-;6272:15;6290:138;6318:10;;6342:18;6290:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6374:12;6290:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;6290:14;;;:138;;;:::i;:::-;6272:156;;6457:1;6446:12;;:7;:12;;;;;6438:21;;;;;;;;6494:4;6469:13;:22;6483:7;6469:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5573:932;:::o;6858:150:17:-;6920:10;6986:5;6974:18;6965:27;;6951:51;;;:::o;2564:183::-;2627:4;2647:21;:19;;;:21;;;:::i;:::-;2640:28;;2564:183;;;:::o;5732:383::-;5848:10;5869;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;;;:25;;;:::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;;;:35;;;:::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:17;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:17;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;5882:8;;;;;;;;;;;:17;;;5900:10;5912:8;5882:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5882:39:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5882:39:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5882:39:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5882:39:17;;;;;;;;;;;;;;;;5869:52;;6030:8;;;;;;;;;;;:27;;;6064:5;6071:9;6082:10;6094:3;6099:8;6030:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6030:78:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6030:78:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6030:78:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6030:78:17;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6030:78:17;;;;;;;;;;;;;;;;6023:85;;5732:383;;;;;;;:::o;2752:1749::-;2800:4;2875:1;2819:55;2831:42;2819:11;;;:55;;;:::i;:::-;:57;2815:245;;;2929:42;2901:3;;:71;;;;;;;;;;;;;;;;;;2986:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;3045:4;3038:11;;;;2815:245;3129:1;3073:55;3085:42;3073:11;;;:55;;;:::i;:::-;:57;3069:254;;;3191:42;3163:3;;:71;;;;;;;;;;;;;;;;;;3248:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;3308:4;3301:11;;;;3069:254;3392:1;3336:55;3348:42;3336:11;;;:55;;;:::i;:::-;:57;3332:249;;;3452:42;3424:3;;:71;;;;;;;;;;;;;;;;;;3509:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;3566:4;3559:11;;;;3332:249;3650:1;3594:55;3606:42;3594:11;;;:55;;;:::i;:::-;:57;3590:253;;;3712:42;3684:3;;:71;;;;;;;;;;;;;;;;;;3769:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;3828:4;3821:11;;;;3590:253;3912:1;3856:55;3868:42;3856:11;;;:55;;;:::i;:::-;:57;3852:201;;;3974:42;3946:3;;:71;;;;;;;;;;;;;;;;;;4038:4;4031:11;;;;3852:201;4122:1;4066:55;4078:42;4066:11;;;:55;;;:::i;:::-;:57;4062:200;;;4183:42;4155:3;;:71;;;;;;;;;;;;;;;;;;4247:4;4240:11;;;;4062:200;4331:1;4275:55;4287:42;4275:11;;;:55;;;:::i;:::-;:57;4271:202;;;4394:42;4366:3;;:71;;;;;;;;;;;;;;;;;;4458:4;4451:11;;;;4271:202;4489:5;4482:12;;2752:1749;;:::o;7645:118::-;7743:13;7719:21;:37;;;;;;;;;;;;:::i;:::-;;7645:118;:::o;875:5632:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "875:5632:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2224:21:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2224:21:3;;;;;;;;;;;;;;;;;;;;;;;1251:34:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:34:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1251:34:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4507:111:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4507:111:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1935:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1935:32:3;;;;;;;;;;;;;;;;;;;;;;;1834:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1834:39:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2284:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2284:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:528:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4930:528:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2319:50:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2319:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:48:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1062:48:13;;;;;;;;;;;;;;;;;;;;;;;12629:168:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12629:168:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;992:32:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;992:32:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;992:32:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:26:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1030:26:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1801:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1801:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4051:599:13;;;;;;1734:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1734:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;5771:2986;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5771:2986:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2394:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2394:45:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1879:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1879:21:3;;;;;;;;;;;;;;;;;;;;;;;2172:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2172:22:3;;;;;;;;;;;;;;;;;;;;;;;10874:540;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10874:540:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1906:23:3;;;;;;;;;;;;;;;;;;;;;;;2047:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2047:26:3;;;;;;;;;;;;;;;;;;;;;;;1682:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1682:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2251:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2251:27:3;;;;;;;;;;;;;;;;;;;;;;;1131:198:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:198:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;9228:1354:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9228:1354:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22:0;;;;;;;;;;;;;:::o;2224:21:3:-;;;;:::o;1251:34:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4507:111:17:-;4573:38;4584:4;4590:6;4608:1;4598:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4598:12:17;;;;4573:10;:38::i;:::-;4507:111;;:::o;1935:32:3:-;;;;:::o;1834:39::-;;;;;;;;;;;;;:::o;2284:29::-;;;;;;;;;;;;;:::o;4930:528:13:-;5034:20;:18;:20::i;:::-;5020:34;;:10;:34;;;5012:43;;;;;;;;5073:13;:22;5087:7;5073:22;;;;;;;;;;;;;;;;;;;;;;;;;;;5065:31;;;;;;;;5168:6;5145:20;:29;;;;;;;;;;;;:::i;:::-;;5196:38;5205:6;5213:20;;5196:8;:38::i;:::-;5184:9;:50;;;;5249:24;5266:6;5249:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5249:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5283:17;:15;:17::i;:::-;5384:13;:22;5398:7;5384:22;;;;;;;;;;;;;;;;;;5377:29;;;;;;;;;;;4930:528;;;:::o;2319:50:3:-;;;;;;;;;;;;;:::o;1062:48:13:-;1104:6;1062:48;:::o;12629:168:3:-;12711:3;12733:57;12780:9;12733:13;:46;;:57;;;;:::i;:::-;12726:64;;12629:168;;;:::o;992:32:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1030:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1801:27:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4051:599:13:-;4112:9;4441:15;4124:57;4142:18;4124:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;4124:17;:57::i;:::-;4112:69;;4212:4;4199:9;:17;;4191:26;;;;;;;;4459:114;4487:18;4459:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4519:12;4459:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;4459:14;:114::i;:::-;4441:132;;4602:1;4591:12;;:7;:12;;;;;4583:21;;;;;;;;4639:4;4614:13;:22;4628:7;4614:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4051:599;;:::o;1734:32:3:-;;;;;;;;;;;;;:::o;5771:2986::-;5987:13;6297:27;;:::i;:::-;7033:16;7591:17;7622;7759;7808:16;6024:30;;;;;;;;;;;:44;;;;;6059:9;;;;;;;;;;;6058:10;6024:44;6016:53;;;;;;;;6129:1;6117:8;:13;;:31;;;;;6147:1;6134:9;:14;;6117:31;:65;;;;;6152:30;6172:9;6152:8;:19;;:30;;;;:::i;:::-;6117:65;6109:74;;;;;;;;6234:9;;;;;;;;;;;:34;;;6269:4;6275:10;6234:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6234:52:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6234:52:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6234:52:3;;;;;;;;;;;;;;;;6226:61;;;;;;;;6327:72;6353:14;6327:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6369:19;6327:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6390:8;6335:4;6327:25;;;;:72;;;;;;:::i;:::-;6297:102;;6417:9;;;;;;;;;;;:34;;;6452:4;6458:5;:11;;;6417:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6417:53:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6417:53:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6417:53:3;;;;;;;;;;;;;;;;6409:62;;;;;;;;6573:1;6550:25;;:5;:11;;;:25;;;:54;;;;6594:10;6579:25;;:5;:11;;;:25;;;6550:54;6542:63;;;;;;;;6681:1;6658:25;;:5;:11;;;:25;;;;:54;;;;;6702:10;6687:25;;:5;:11;;;:25;;;;6658:54;6650:63;;;;;;;;6744:5;:11;;;:28;;;;;;6790:5;:15;;;6823:1;6842;6861;6744:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6744:128:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6744:128:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6744:128:3;;;;;;;;;;;;;;;;6723:150;;;;;;;;6896:5;:25;;;6889:3;:32;;6885:138;;;6974:5;:15;;;6942:48;;;6948:24;6942:48;;;;;;;;;;;;;;;;;;7011:1;7004:8;;;;6885:138;7052:68;7070:49;7103:5;:15;;;7070:32;:49::i;:::-;7052:8;:17;;:68;;;;:::i;:::-;7033:87;;7150:1;7134:12;:17;7130:165;;;7246:5;:15;;;7217:45;;;7223:21;7217:45;;;;;;;;;;;;;;;;;;7283:1;7276:8;;;;7130:165;7317:39;7332:12;7346:9;7317:14;:39::i;:::-;7305:51;;7366:20;;;;;;;;;;;:36;;;7416:5;:11;;;7441:10;7465:9;7488:5;:11;;;7366:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7366:143:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7366:143:3;;;;7519:61;7553:5;:15;;;7570:9;7519:13;:33;;:61;;;;;:::i;:::-;7611:1;7591:21;;7642:1;7622:21;;7688:1;7658:32;;:5;:18;;;:32;;;;7654:823;;;7779:15;:9;:13;:15::i;:::-;7759:35;;7827:15;:9;:13;:15::i;:::-;7808:34;;7877:1;7860:5;:14;;;:18;7856:299;;;7913:58;7945:12;7959:11;7913:5;:14;;;:31;;:58;;;;;:::i;:::-;7898:73;;7989:151;8037:5;:11;;;8070:5;:18;;;8110:12;7989:9;;;;;;;;;;;:26;;;;:151;;;;;;:::i;:::-;7856:299;8190:1;8173:5;:14;;;:18;8169:298;;;8226:58;8258:12;8272:11;8226:5;:14;;;:31;;:58;;;;;:::i;:::-;8211:73;;8302:150;8350:10;8382:5;:18;;;8422:12;8302:9;;;;;;;;;;;:26;;;;:150;;;;;;:::i;:::-;8169:298;7654:823;8566:5;:18;;;8492:231;;8542:10;8492:231;;8517:5;:11;;;8492:231;;;8598:9;8621:12;8647;8673:5;:11;;;8698:5;:15;;;8492:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8741:9;8734:16;;5771:2986;;;;;;;;;;;;;;;;:::o;2394:45::-;;;;;;;;;;;;;:::o;1879:21::-;;;;:::o;2172:22::-;;;;:::o;10874:540::-;14315:31;;;;;;;;;;;14301:45;;:10;:45;;;14293:54;;;;;;;;10977:30;;;;;;;;;;;10976:31;10968:40;;;;;;;;11088:1;11065:25;;:11;:25;;;;11057:34;;;;;;;;11189:11;11145:20;;:56;;;;;;;;;;;;;;;;;;11267:4;11219:53;;:20;;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11219:36:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11219:36:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11219:36:3;;;;;;;;;;;;;;;;:53;;;11211:62;;;;;;;;11349:11;11316:30;;:44;;;;;;;;;;;;;;;;;;11403:4;11370:30;;:37;;;;;;;;;;;;;;;;;;10874:540;:::o;1906:23::-;;;;:::o;2047:26::-;;;;:::o;1682:46::-;;;;;;;;;;;;;:::o;2251:27::-;;;;:::o;1131:198:0:-;1390:7;;;;;;;;;;;1376:21;;:10;:21;;;1368:30;;;;;;;;1235:1;1213:24;;:10;:24;;;;1205:33;;;;;;;;1281:10;1253:39;;1272:7;;;;;;;;;;;1253:39;;;;;;;;;;;;1312:10;1302:7;;:20;;;;;;;;;;;;;;;;;;1131:198;:::o;9228:1354:3:-;9392:16;9569:27;;:::i;:::-;9944:16;9447:1;9432:11;:16;;:52;;;;;9452:32;9475:8;9452:11;:22;;:32;;;;:::i;:::-;9432:52;9424:61;;;;;;;;9549:9;;;;;;;;;;;9548:10;9540:19;;;;;;;;9599:72;9625:14;9599:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9641:19;9599:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9662:8;9607:4;9599:25;;;;:72;;;;;;:::i;:::-;9569:102;;9704:10;9689:25;;:5;:11;;;:25;;;9681:34;;;;;;;;9807:5;:25;;;9800:3;:32;;9796:138;;;9885:5;:15;;;9853:48;;;9859:24;9853:48;;;;;;;;;;;;;;;;;;9922:1;9915:8;;;;9796:138;9963:68;9981:49;10014:5;:15;;;9981:32;:49::i;:::-;9963:8;:17;;:68;;;;:::i;:::-;9944:87;;10061:1;10045:12;:17;10041:173;;;10165:5;:15;;;10136:45;;;10142:21;10136:45;;;;;;;;;;;;;;;;;;10202:1;10195:8;;;;10041:173;10239:41;10254:11;10267:12;10239:14;:41::i;:::-;10224:56;;10327:67;10364:5;:15;;;10381:12;10327:13;:36;;:67;;;;;:::i;:::-;10520:5;:15;;;10409:136;;;10462:5;:18;;;10409:136;;10437:5;:11;;;10409:136;;;10494:12;10409:136;;;;;;;;;;;;;;;;;;10563:12;10556:19;;9228:1354;;;;;;;;;:::o;6485:112:17:-;6545:7;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:17;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:17;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6570:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6570:20:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6570:20:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6570:20:17;;;;;;;;;;;;;;;;6563:27;;6485:112;:::o;7013:593::-;7074:4;7090:20;7132:9;7155:13;7191:6;7119:2;7090:32;;7144:1;7132:13;;7171:5;7155:21;;7198:1;7191:8;;7186:357;7203:7;:14;7201:1;:16;7186:357;;;7256:2;7242:16;;:7;7250:1;7242:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7241:38;;;;;7276:2;7262:16;;:7;7270:1;7262:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7241:38;7237:295;;;7302:8;7298:102;;;7342:1;7336:2;:7;7332:49;;;7345:5;;7332:49;7377:4;;;;;;;;7298:102;7425:2;7417:10;;;;7472:2;7458:7;7466:1;7458:10;;;;;;;;;;;;;;;;;;;;7453:16;;;:21;7445:29;;;;7237:295;;;7513:2;7499:16;;:7;7507:1;7499:10;;;;;;;;;;;;;;;;;;;;:16;;;;7495:37;;;7528:4;7517:15;;7495:37;7237:295;7219:3;;;;;;;7186:357;;;7561:1;7556:2;:6;7552:26;;;7576:2;7572;:6;7564:14;;;;7552:26;7595:4;7588:11;;7013:593;;;;;;;;:::o;13014:851:3:-;13126:23;13064:9;;;;;;;;;;;13060:56;;;13109:7;;13060:56;13169:10;;13163:3;:16;13159:616;;;13288:4;13276:9;;:16;;;;;;;;;;;;;;;;;;13384:9;;13363:30;;13159:616;;;13427:9;;13414;;:22;;13410:365;;;13528:4;13516:9;;:16;;;;;;;;;;;;;;;;;;13567:9;;13546:30;;13410:365;;;13610:11;;13597:9;;:24;;13593:182;;;13714:4;13702:9;;:16;;;;;;;;;;;;;;;;;;13753:11;;13732:32;;13593:182;13410:365;13159:616;13789:9;;;;;;;;;;;13785:74;;;13814:34;13829:18;13814:14;:34::i;:::-;13785:74;13014:851;;:::o;1449:236:10:-;1583:3;1609:69;1644:4;:22;;:33;1667:9;1644:33;;;;;;;;;;;;;;;;;;1609:4;:19;;:30;1629:9;1609:30;;;;;;;;;;;;;;;;;;:34;;:69;;;;:::i;:::-;1602:76;;1449:236;;;;:::o;4915:159:17:-;5006:4;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:17;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:17;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;5028:8;;;;;;;;;;;:17;;;5046:10;5058:8;5028:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5028:39:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5028:39:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5028:39:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5028:39:17;;;;;;;;;;;;;;;;5021:46;;4915:159;;;;:::o;6120:359::-;6220:10;6241;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:17;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:17;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6254:8;;;;;;;;;;;:17;;;6272:10;6284:8;6254:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:39:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6254:39:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6254:39:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6254:39:17;;;;;;;;;;;;;;;;6241:52;;6402:8;;;;;;;;;;;:27;;;6436:5;6443:1;6446:10;6458:3;6463:8;6402:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6402:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6402:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6402:70:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6402:70:17;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6402:70:17;;;;;;;;;;;;;;;;6395:77;;6120:359;;;;;;:::o;2916:109:9:-;2973:4;3003:1;2998;:6;:19;;;;3016:1;3012;3008;:5;:9;2998:19;2989:29;;2916:109;;;;:::o;3844:752:10:-;4021:11;;:::i;:::-;4062:14;4077:1;4062:17;;;;;;;;;;;;;4048:5;:11;;:31;;;;;;;;;;;4103:14;4118:1;4103:17;;;;;;;;;;;;;4089:5;:11;;:31;;;;;;;;;;;4151:14;4166:1;4151:17;;;;;;;;;;;;;4130:5;:18;;:38;;;;;;;;;;;4195:19;4215:1;4195:22;;;;;;;;;;;;;4178:5;:14;;:39;;;;;4244:19;4264:1;4244:22;;;;;;;;;;;;;4227:5;:14;;:39;;;;;4290:19;4310:1;4290:22;;;;;;;;;;;;;4276:5;:11;;:36;;;;;4350:19;4370:1;4350:22;;;;;;;;;;;;;4322:5;:25;;:50;;;;;4394:8;4382:5;:9;;:20;;;;;4430:137;4459:15;4488:14;4516:19;4549:8;4430:15;:137::i;:::-;4412:5;:15;;:155;;;;;;;;;;;;;4584:5;4577:12;;3844:752;;;;;;:::o;2354:122:9:-;2415:6;2440:10;2444:1;2448;2447:2;;2440:3;:10::i;:::-;2433:17;;2354:122;;;;:::o;3537:115::-;3596:6;3630;3634:1;3630:3;:6::i;:::-;3621;3625:1;3621:3;:6::i;:::-;:15;:24;;3644:1;3621:24;;;3640:1;3621:24;3614:31;;3537:115;;;;:::o;4802:195:10:-;4945:45;4980:9;4945:4;:19;;:30;4965:9;4945:30;;;;;;;;;;;;;;;;;;:34;;:45;;;;:::i;:::-;4912:4;:19;;:30;4932:9;4912:30;;;;;;;;;;;;;;;;;:78;;;;4802:195;;;:::o;3139:167:9:-;3185:7;3212:1;3208;:5;3204:96;;;3242:1;3241:2;;3229:15;;;;3204:96;3287:1;3275:14;;3139:167;;;;:::o;1037:203::-;1167:7;1222:11;1197:22;1206:1;1209:9;1197:8;:22::i;:::-;:36;;;;;;;;1190:43;;1037:203;;;;;:::o;492:169:30:-;620:5;:18;;;639:4;645:2;649:5;620:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;620:35:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;620:35:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;620:35:30;;;;;;;;;;;;;;;;613:43;;;;;;492:169;;;;:::o;5191:210:10:-;5343:51;5381:12;5343:4;:22;;:33;5366:9;5343:33;;;;;;;;;;;;;;;;;;:37;;:51;;;;:::i;:::-;5307:4;:22;;:33;5330:9;5307:33;;;;;;;;;;;;;;;;;:87;;;;5191:210;;;:::o;6858:150:17:-;6920:10;6986:5;6974:18;6965:27;;6951:51;;;:::o;2564:183::-;2627:4;2647:21;:19;:21::i;:::-;2640:28;;2564:183;;;:::o;14020:166:3:-;14107:20;14089:15;:38;;;;14142:37;14158:20;14142:37;;;;;;;;;;;;;;;;;;14020:166;:::o;1673:509:9:-;1729:6;1747:8;1762:1;1758;:5;1747:16;;1778;1789:1;1792;1778:10;:16::i;:::-;1777:17;1773:126;;;1887:1;1880:8;;;;1773:126;1918:1;1913;:6;;1909:249;;;2022:1;856:3;850:1;842:17;;;;839:22;2009:14;2004:1;:19;;1997:27;;;;;;1909:249;;;2145:1;792:3;786:1;778:17;;;;2132:14;2127:1;:19;;2120:27;;;;;;1909:249;2174:1;2167:8;;1673:509;;;;;;:::o;2115:643:10:-;2294:7;2381:15;2414:14;2429:1;2414:17;;;;;;;;;;;;;2449:14;2464:1;2449:17;;;;;;;;;;;;;2484:14;2499:1;2484:17;;;;;;;;;;;;;2519:19;2539:1;2519:22;;;;;;;;;;;;;2559:19;2579:1;2559:22;;;;;;;;;;;;;2599:19;2619:1;2599:22;;;;;;;;;;;;;2639:19;2659:1;2639:22;;;;;;;;;;;;;2679:19;2699:1;2679:22;;;;;;;;;;;;;2719:8;2347:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2347:394:10;;;2324:427;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2324:427:10;;;;;;;;;;;;;;;;2317:434;;2115:643;;;;;;:::o;869:162:9:-;932:7;951:9;967:1;963;:5;951:17;;990:1;985;:6;:20;;;;1004:1;999;995;:5;;;;;;;;:10;985:20;978:28;;;;;;1023:1;1016:8;;869:162;;;;;:::o;2752:1749:17:-;2800:4;2875:1;2819:55;2831:42;2819:11;:55::i;:::-;:57;2815:245;;;2929:42;2901:3;;:71;;;;;;;;;;;;;;;;;;2986:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3045:4;3038:11;;;;2815:245;3129:1;3073:55;3085:42;3073:11;:55::i;:::-;:57;3069:254;;;3191:42;3163:3;;:71;;;;;;;;;;;;;;;;;;3248:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;3308:4;3301:11;;;;3069:254;3392:1;3336:55;3348:42;3336:11;:55::i;:::-;:57;3332:249;;;3452:42;3424:3;;:71;;;;;;;;;;;;;;;;;;3509:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;3566:4;3559:11;;;;3332:249;3650:1;3594:55;3606:42;3594:11;:55::i;:::-;:57;3590:253;;;3712:42;3684:3;;:71;;;;;;;;;;;;;;;;;;3769:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3828:4;3821:11;;;;3590:253;3912:1;3856:55;3868:42;3856:11;:55::i;:::-;:57;3852:201;;;3974:42;3946:3;;:71;;;;;;;;;;;;;;;;;;4038:4;4031:11;;;;3852:201;4122:1;4066:55;4078:42;4066:11;:55::i;:::-;:57;4062:200;;;4183:42;4155:3;;:71;;;;;;;;;;;;;;;;;;4247:4;4240:11;;;;4062:200;4331:1;4275:55;4287:42;4275:11;:55::i;:::-;:57;4271:202;;;4394:42;4366:3;;:71;;;;;;;;;;;;;;;;;;4458:4;4451:11;;;;4271:202;4489:5;4482:12;;2752:1749;;:::o;7645:118::-;7743:13;7719:21;:37;;;;;;;;;;;;:::i;:::-;;7645:118;:::o;875:5632:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/*\n    Copyright 2017-2018 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity ^0.4.24;\n\nimport \"./oraclizeAPI.sol\";\nimport \"../libraries/MathLib.sol\";\nimport \"../MarketContract.sol\";\n\n\n/// @title MarketContract first example of a MarketProtocol contract using Oraclize services\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractOraclize is MarketContract, usingOraclize {\n    using MathLib for uint;\n\n    // constants\n    string public ORACLE_DATA_SOURCE;\n    string public ORACLE_QUERY;\n    uint constant public QUERY_CALLBACK_GAS = 150000;\n    //uint constant public QUERY_CALLBACK_GAS_PRICE = 20000000000 wei; // 20 gwei - need to make this dynamic!\n\n    // state variables\n    string public lastPriceQueryResult;\n    mapping(bytes32 => bool) validQueryIDs;\n\n    /// @param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n    /// @param creatorAddress address of the person creating the contract\n    /// @param marketTokenAddress address of our member token\n    /// @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n    /// @param collateralPoolFactoryAddress address of the factory creating the collateral pools\n    /// @param contractSpecs array of unsigned integers including:\n    /// floorPrice minimum tradeable price of this contract, contract enters settlement if breached\n    /// capPrice maximum tradeable price of this contract, contract enters settlement if breached\n    /// priceDecimalPlaces number of decimal places to convert our queried price from a floating point to\n    /// an integer\n    /// qtyMultiplier multiply traded qty by this value from base units of collateral token.\n    /// expirationTimeStamp - seconds from epoch that this contract expires and enters settlement\n    /// @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n    /// see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n    /// @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples\n    constructor(\n        string contractName,\n        address creatorAddress,\n        address marketTokenAddress,\n        address collateralTokenAddress,\n        address collateralPoolFactoryAddress,\n        uint[5] contractSpecs,\n        string oracleDataSource,\n        string oracleQuery\n    ) MarketContract(\n        contractName,\n        creatorAddress,\n        marketTokenAddress,\n        collateralTokenAddress,\n        collateralPoolFactoryAddress,\n        contractSpecs\n    )  public\n    {\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n        //oraclize_setCustomGasPrice(QUERY_CALLBACK_GAS_PRICE);  //TODO: allow this to be changed by creator.\n        ORACLE_DATA_SOURCE = oracleDataSource;\n        ORACLE_QUERY = oracleQuery;\n\n        // Future timestamp must be within 60 days from now.\n        // https://docs.oraclize.it/#ethereum-quick-start-schedule-a-query-in-the-future\n        require(EXPIRATION - now <= 60 days);\n        queryOracle();                      // Schedule a call to oracle at contract expiration time.\n    }\n\n    /// @notice allows a user to request an extra query to oracle in order to push the contract into\n    /// settlement.  A user may call this as many times as they like, since they are the ones paying for\n    /// the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n    /// settle a contract early if a price cap or floor has been breached.\n    function requestEarlySettlement() external payable {\n        uint cost = oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS);\n        require(msg.value >= cost); // user must pay enough to cover query and callback\n        // create immediate query, we must make sure to store this one separately, so\n        // we do not schedule recursive callbacks when the query completes.\n        bytes32 queryId = oraclize_query(\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        require(queryId != 0);\n        validQueryIDs[queryId] = true;\n    }\n\n    /*\n    // PUBLIC METHODS\n    */\n\n    /// @notice only public for callbacks from oraclize, do not call\n    /// @param queryID of the returning query, this should match our own internal mapping\n    /// @param result query to be processed\n    /// @param proof result proof\n    function __callback(bytes32 queryID, string result, bytes proof) public {\n        require(msg.sender == oraclize_cbAddress());\n        require(validQueryIDs[queryID]);  // At expiration or early settlement.\n        lastPriceQueryResult = result;\n        lastPrice = parseInt(result, PRICE_DECIMAL_PLACES);\n        emit UpdatedLastPrice(result);\n        checkSettlement();  // Verify settlement at expiration or requested early settlement.\n        delete validQueryIDs[queryID];\n        proof;  // silence compiler warnings\n    }\n\n    /*\n    // PRIVATE METHODS\n    */\n\n    /// @dev call to oraclize to set up our query and record its hash.\n    function queryOracle() private {\n        // Require that sufficient funds are available to pay for the query.\n        // require(oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS) < this.balance);\n        // NOTE: Currently the first oracle query call to oraclize.it is free. Since our\n        // expiration query will always be the first, there is no needed pre-funding amount\n        // to create this query.  When we go to the centralized query hub - this will change\n        // due to the fact that the address creating the query will always be the query hub.\n        // will have to do the analysis to see which is cheaper, free queries, or lower deployment\n        // gas costs\n        bytes32 queryId = oraclize_query(\n            EXPIRATION,\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        require(queryId != 0);\n        validQueryIDs[queryId] = true;\n    }\n}",
  "sourcePath": "/home/pelsasser/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
  "ast": {
    "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [
        2949
      ]
    },
    "id": 2950,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2758,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:13"
      },
      {
        "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 2759,
        "nodeType": "ImportDirective",
        "scope": 2950,
        "sourceUnit": 3910,
        "src": "634:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 2760,
        "nodeType": "ImportDirective",
        "scope": 2950,
        "sourceUnit": 2233,
        "src": "662:34:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 2761,
        "nodeType": "ImportDirective",
        "scope": 2950,
        "sourceUnit": 1518,
        "src": "697:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2762,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1517,
              "src": "910:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1517",
                "typeString": "contract MarketContract"
              }
            },
            "id": 2763,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2764,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3909,
              "src": "926:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$3909",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 2765,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:13"
          }
        ],
        "contractDependencies": [
          55,
          1517,
          3909
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2949,
        "linearizedBaseContracts": [
          2949,
          3909,
          1517,
          55
        ],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2768,
            "libraryName": {
              "contractScope": null,
              "id": 2766,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2232,
              "src": "952:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$2232",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:13",
            "typeName": {
              "id": 2767,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2770,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "992:32:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2769,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2772,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1030:26:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2771,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2775,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1062:48:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2773,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 2774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2777,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1251:34:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2776,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1251:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2781,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1291:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 2780,
              "keyType": {
                "id": 2778,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1291:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 2779,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1310:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2835,
              "nodeType": "Block",
              "src": "3094:567:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2811,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3329,
                          "src": "3122:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2812,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "3144:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "3122:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 2810,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3767,
                      "src": "3104:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 2814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2815,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:58:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2770,
                      "src": "3282:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2817,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "3303:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3282:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2819,
                  "nodeType": "ExpressionStatement",
                  "src": "3282:37:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2820,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "3329:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2821,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2799,
                      "src": "3344:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3329:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2823,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2825,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "3524:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2826,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5194,
                            "src": "3537:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3524:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 2828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3544:7:13",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5184000_by_1",
                            "typeString": "int_const 5184000"
                          },
                          "value": "60"
                        },
                        "src": "3524:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "3516:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3516:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2831,
                  "nodeType": "ExpressionStatement",
                  "src": "3516:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2832,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2948,
                      "src": "3562:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:13:13"
                }
              ]
            },
            "documentation": "@param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n @param creatorAddress address of the person creating the contract\n @param marketTokenAddress address of our member token\n @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param collateralPoolFactoryAddress address of the factory creating the collateral pools\n @param contractSpecs array of unsigned integers including:\n floorPrice minimum tradeable price of this contract, contract enters settlement if breached\n capPrice maximum tradeable price of this contract, contract enters settlement if breached\n priceDecimalPlaces number of decimal places to convert our queried price from a floating point to\n an integer\n qtyMultiplier multiply traded qty by this value from base units of collateral token.\n expirationTimeStamp - seconds from epoch that this contract expires and enters settlement\n @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples",
            "id": 2836,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2802,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2783,
                    "src": "2918:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2803,
                    "name": "creatorAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2785,
                    "src": "2940:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2804,
                    "name": "marketTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2787,
                    "src": "2964:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2805,
                    "name": "collateralTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2789,
                    "src": "2992:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2806,
                    "name": "collateralPoolFactoryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2791,
                    "src": "3024:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2807,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2795,
                    "src": "3062:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 2808,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2801,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1517,
                  "src": "2894:14:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$1517_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2894:187:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2783,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2622:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2782,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2785,
                  "name": "creatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2651:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2651:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2787,
                  "name": "marketTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2683:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2683:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2789,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2719:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2791,
                  "name": "collateralPoolFactoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2759:36:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2795,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2805:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2792,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2805:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2794,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 2793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2810:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2805:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2797,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2836:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2799,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2869:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2869:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2612:281:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 2809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3094:0:13"
            },
            "scope": 2949,
            "src": "2601:1060:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2873,
              "nodeType": "Block",
              "src": "4102:548:13",
              "statements": [
                {
                  "assignments": [
                    2840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2840,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 2874,
                      "src": "4112:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2839,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4112:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2845,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2842,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "4142:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2843,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2775,
                        "src": "4162:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2841,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3596,
                        3614
                      ],
                      "referencedDeclaration": 3614,
                      "src": "4124:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 2844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4124:57:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4112:69:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2847,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5192,
                            "src": "4199:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4199:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2849,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2840,
                          "src": "4212:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4199:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "4191:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2852,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:26:13"
                },
                {
                  "assignments": [
                    2854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2854,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2874,
                      "src": "4441:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2853,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4441:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2860,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2856,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "4487:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2857,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "4519:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2858,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2775,
                        "src": "4545:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2855,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3643,
                        3674,
                        3709,
                        3742
                      ],
                      "referencedDeclaration": 3742,
                      "src": "4459:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:114:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4441:132:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2862,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2854,
                          "src": "4591:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4602:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4591:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "4583:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2866,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:21:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2867,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "4614:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2869,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2854,
                        "src": "4628:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4614:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4639:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4614:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2872,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:29:13"
                }
              ]
            },
            "documentation": "@notice allows a user to request an extra query to oracle in order to push the contract into\n settlement.  A user may call this as many times as they like, since they are the ones paying for\n the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n settle a contract early if a price cap or floor has been breached.",
            "id": 2874,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4082:2:13"
            },
            "payable": true,
            "returnParameters": {
              "id": 2838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4102:0:13"
            },
            "scope": 2949,
            "src": "4051:599:13",
            "stateMutability": "payable",
            "superFunction": 1422,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2922,
              "nodeType": "Block",
              "src": "5002:456:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2884,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5192,
                            "src": "5020:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5020:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2886,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3754,
                            "src": "5034:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 2887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5034:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5020:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "5012:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2890,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:43:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2892,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2781,
                          "src": "5073:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 2894,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2893,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2876,
                          "src": "5087:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5073:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "5065:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2896,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:31:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2897,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2777,
                      "src": "5145:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2898,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "5168:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5145:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2900,
                  "nodeType": "ExpressionStatement",
                  "src": "5145:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2901,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "5184:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2903,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2878,
                          "src": "5205:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2904,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "5213:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2902,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "5196:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5196:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5184:50:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2907,
                  "nodeType": "ExpressionStatement",
                  "src": "5184:50:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2909,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "5266:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2908,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 828,
                      "src": "5249:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5249:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2911,
                  "nodeType": "EmitStatement",
                  "src": "5244:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2912,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "5283:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5283:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2914,
                  "nodeType": "ExpressionStatement",
                  "src": "5283:17:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5377:29:13",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2915,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "5384:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2917,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2916,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2876,
                        "src": "5398:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5384:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "5377:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2920,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2880,
                    "src": "5416:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2921,
                  "nodeType": "ExpressionStatement",
                  "src": "5416:5:13"
                }
              ]
            },
            "documentation": "@notice only public for callbacks from oraclize, do not call\n @param queryID of the returning query, this should match our own internal mapping\n @param result query to be processed\n @param proof result proof",
            "id": 2923,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2876,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "4950:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2875,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4950:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2878,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "4967:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4967:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2880,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "4982:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2879,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4982:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4949:45:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 2882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5002:0:13"
            },
            "scope": 2949,
            "src": "4930:528:13",
            "stateMutability": "nonpayable",
            "superFunction": 3581,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2947,
              "nodeType": "Block",
              "src": "5604:901:13",
              "statements": [
                {
                  "assignments": [
                    2927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2927,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2948,
                      "src": "6272:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2926,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6272:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2934,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2929,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "6318:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2930,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "6342:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2931,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "6374:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2932,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2775,
                        "src": "6400:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2928,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3643,
                        3674,
                        3709,
                        3742
                      ],
                      "referencedDeclaration": 3709,
                      "src": "6290:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:138:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6272:156:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2936,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2927,
                          "src": "6446:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6457:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6446:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "6438:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6438:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "6438:21:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2941,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "6469:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2943,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2942,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2927,
                        "src": "6483:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6469:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6494:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6469:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2946,
                  "nodeType": "ExpressionStatement",
                  "src": "6469:29:13"
                }
              ]
            },
            "documentation": "@dev call to oraclize to set up our query and record its hash.",
            "id": 2948,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5593:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5604:0:13"
            },
            "scope": 2949,
            "src": "5573:932:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 2950,
        "src": "875:5632:13"
      }
    ],
    "src": "608:5899:13"
  },
  "legacyAST": {
    "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [
        2949
      ]
    },
    "id": 2950,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2758,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:13"
      },
      {
        "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 2759,
        "nodeType": "ImportDirective",
        "scope": 2950,
        "sourceUnit": 3910,
        "src": "634:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 2760,
        "nodeType": "ImportDirective",
        "scope": 2950,
        "sourceUnit": 2233,
        "src": "662:34:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/pelsasser/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 2761,
        "nodeType": "ImportDirective",
        "scope": 2950,
        "sourceUnit": 1518,
        "src": "697:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2762,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1517,
              "src": "910:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1517",
                "typeString": "contract MarketContract"
              }
            },
            "id": 2763,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2764,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3909,
              "src": "926:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$3909",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 2765,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:13"
          }
        ],
        "contractDependencies": [
          55,
          1517,
          3909
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2949,
        "linearizedBaseContracts": [
          2949,
          3909,
          1517,
          55
        ],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2768,
            "libraryName": {
              "contractScope": null,
              "id": 2766,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2232,
              "src": "952:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$2232",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:13",
            "typeName": {
              "id": 2767,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2770,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "992:32:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2769,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2772,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1030:26:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2771,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2775,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1062:48:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2773,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 2774,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2777,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1251:34:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2776,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1251:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2781,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 2949,
            "src": "1291:38:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 2780,
              "keyType": {
                "id": 2778,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1291:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 2779,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1310:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2835,
              "nodeType": "Block",
              "src": "3094:567:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 2813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2811,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3329,
                          "src": "3122:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2812,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "3144:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "3122:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 2810,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3767,
                      "src": "3104:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 2814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3104:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2815,
                  "nodeType": "ExpressionStatement",
                  "src": "3104:58:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2816,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2770,
                      "src": "3282:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2817,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "3303:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3282:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2819,
                  "nodeType": "ExpressionStatement",
                  "src": "3282:37:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2820,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "3329:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2821,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2799,
                      "src": "3344:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3329:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2823,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:26:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2825,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "3524:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2826,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5194,
                            "src": "3537:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3524:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 2828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3544:7:13",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5184000_by_1",
                            "typeString": "int_const 5184000"
                          },
                          "value": "60"
                        },
                        "src": "3524:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "3516:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3516:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2831,
                  "nodeType": "ExpressionStatement",
                  "src": "3516:36:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2832,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2948,
                      "src": "3562:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:13:13"
                }
              ]
            },
            "documentation": "@param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n @param creatorAddress address of the person creating the contract\n @param marketTokenAddress address of our member token\n @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param collateralPoolFactoryAddress address of the factory creating the collateral pools\n @param contractSpecs array of unsigned integers including:\n floorPrice minimum tradeable price of this contract, contract enters settlement if breached\n capPrice maximum tradeable price of this contract, contract enters settlement if breached\n priceDecimalPlaces number of decimal places to convert our queried price from a floating point to\n an integer\n qtyMultiplier multiply traded qty by this value from base units of collateral token.\n expirationTimeStamp - seconds from epoch that this contract expires and enters settlement\n @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples",
            "id": 2836,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2802,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2783,
                    "src": "2918:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2803,
                    "name": "creatorAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2785,
                    "src": "2940:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2804,
                    "name": "marketTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2787,
                    "src": "2964:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2805,
                    "name": "collateralTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2789,
                    "src": "2992:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2806,
                    "name": "collateralPoolFactoryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2791,
                    "src": "3024:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2807,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2795,
                    "src": "3062:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 2808,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2801,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1517,
                  "src": "2894:14:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$1517_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2894:187:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2783,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2622:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2782,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2785,
                  "name": "creatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2651:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2651:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2787,
                  "name": "marketTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2683:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2683:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2789,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2719:30:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2791,
                  "name": "collateralPoolFactoryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2759:36:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2795,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2805:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2792,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2805:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2794,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 2793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2810:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2805:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2797,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2836:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2799,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "2869:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2869:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2612:281:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 2809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3094:0:13"
            },
            "scope": 2949,
            "src": "2601:1060:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2873,
              "nodeType": "Block",
              "src": "4102:548:13",
              "statements": [
                {
                  "assignments": [
                    2840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2840,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 2874,
                      "src": "4112:9:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2839,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4112:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2845,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2842,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "4142:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2843,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2775,
                        "src": "4162:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2841,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3596,
                        3614
                      ],
                      "referencedDeclaration": 3614,
                      "src": "4124:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 2844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4124:57:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4112:69:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2847,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5192,
                            "src": "4199:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4199:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2849,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2840,
                          "src": "4212:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4199:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "4191:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2852,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:26:13"
                },
                {
                  "assignments": [
                    2854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2854,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2874,
                      "src": "4441:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2853,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4441:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2860,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2856,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "4487:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2857,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "4519:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2858,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2775,
                        "src": "4545:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2855,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3643,
                        3674,
                        3709,
                        3742
                      ],
                      "referencedDeclaration": 3742,
                      "src": "4459:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:114:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4441:132:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2862,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2854,
                          "src": "4591:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4602:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4591:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "4583:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2866,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:21:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2867,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "4614:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2869,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2854,
                        "src": "4628:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4614:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4639:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4614:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2872,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:29:13"
                }
              ]
            },
            "documentation": "@notice allows a user to request an extra query to oracle in order to push the contract into\n settlement.  A user may call this as many times as they like, since they are the ones paying for\n the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n settle a contract early if a price cap or floor has been breached.",
            "id": 2874,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4082:2:13"
            },
            "payable": true,
            "returnParameters": {
              "id": 2838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4102:0:13"
            },
            "scope": 2949,
            "src": "4051:599:13",
            "stateMutability": "payable",
            "superFunction": 1422,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2922,
              "nodeType": "Block",
              "src": "5002:456:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2884,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5192,
                            "src": "5020:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5020:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2886,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3754,
                            "src": "5034:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 2887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5034:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5020:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "5012:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2890,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:43:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2892,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2781,
                          "src": "5073:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 2894,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2893,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2876,
                          "src": "5087:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5073:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "5065:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:31:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2896,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:31:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2897,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2777,
                      "src": "5145:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2898,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2878,
                      "src": "5168:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "5145:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2900,
                  "nodeType": "ExpressionStatement",
                  "src": "5145:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2901,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "5184:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2903,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2878,
                          "src": "5205:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2904,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "5213:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2902,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "5196:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5196:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5184:50:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2907,
                  "nodeType": "ExpressionStatement",
                  "src": "5184:50:13"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2909,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2878,
                        "src": "5266:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2908,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 828,
                      "src": "5249:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5249:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2911,
                  "nodeType": "EmitStatement",
                  "src": "5244:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2912,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "5283:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5283:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2914,
                  "nodeType": "ExpressionStatement",
                  "src": "5283:17:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5377:29:13",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2915,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "5384:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2917,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2916,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2876,
                        "src": "5398:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5384:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "5377:29:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2920,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2880,
                    "src": "5416:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 2921,
                  "nodeType": "ExpressionStatement",
                  "src": "5416:5:13"
                }
              ]
            },
            "documentation": "@notice only public for callbacks from oraclize, do not call\n @param queryID of the returning query, this should match our own internal mapping\n @param result query to be processed\n @param proof result proof",
            "id": 2923,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2876,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "4950:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2875,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4950:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2878,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "4967:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4967:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2880,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2923,
                  "src": "4982:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2879,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4982:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4949:45:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 2882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5002:0:13"
            },
            "scope": 2949,
            "src": "4930:528:13",
            "stateMutability": "nonpayable",
            "superFunction": 3581,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2947,
              "nodeType": "Block",
              "src": "5604:901:13",
              "statements": [
                {
                  "assignments": [
                    2927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2927,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2948,
                      "src": "6272:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2926,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6272:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2934,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2929,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "6318:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2930,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "6342:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2931,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "6374:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2932,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2775,
                        "src": "6400:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2928,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3643,
                        3674,
                        3709,
                        3742
                      ],
                      "referencedDeclaration": 3709,
                      "src": "6290:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6290:138:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6272:156:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2936,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2927,
                          "src": "6446:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6457:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6446:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5195,
                        5196
                      ],
                      "referencedDeclaration": 5195,
                      "src": "6438:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6438:21:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2940,
                  "nodeType": "ExpressionStatement",
                  "src": "6438:21:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2941,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2781,
                        "src": "6469:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2943,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2942,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2927,
                        "src": "6483:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6469:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6494:4:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6469:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2946,
                  "nodeType": "ExpressionStatement",
                  "src": "6469:29:13"
                }
              ]
            },
            "documentation": "@dev call to oraclize to set up our query and record its hash.",
            "id": 2948,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5593:2:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5604:0:13"
            },
            "scope": 2949,
            "src": "5573:932:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 2950,
        "src": "875:5632:13"
      }
    ],
    "src": "608:5899:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-27T19:00:06.643Z"
}
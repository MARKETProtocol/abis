{
  "contractName": "MarketContractOraclize",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPriceQueryResult",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_DECIMAL_PLACES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "COLLATERAL_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QUERY_CALLBACK_GAS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_DATA_SOURCE",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_QUERY",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_CAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXPIRATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_FLOOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QTY_MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "transferCreator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractName",
          "type": "string"
        },
        {
          "name": "baseAddresses",
          "type": "address[2]"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[5]"
        },
        {
          "name": "oracleDataSource",
          "type": "string"
        },
        {
          "name": "oracleQuery",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "UpdatedLastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "settlePrice",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "currentCreator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestEarlySettlement",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "queryID",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600a60006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162003a0238038062003a028339810180604052810190808051820192919060200191908260400191908260a0018051820192919060200180518201929190505050848484336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000600581101515620000c457fe5b6020020151600481905550806001600581101515620000df57fe5b6020020151600381905550600454600354111515620000fd57600080fd5b8060026005811015156200010d57fe5b60200201516005819055508060036005811015156200012857fe5b60200201516006819055508060046005811015156200014357fe5b6020020151600781905550426007541115156200015f57600080fd5b826001908051906020019062000177929190620013d1565b508160016002811015156200018857fe5b6020020151600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000600281101515620001dd57fe5b60200201516000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200028660017f01000000000000000000000000000000000000000000000000000000000000000260107f01000000000000000000000000000000000000000000000000000000000000000217620002f3640100000000026401000000009004565b81600d90805190602001906200029e929190620013d1565b5080600e9080519060200190620002b7929190620013d1565b50624f1a00426007540311151515620002cf57600080fd5b620002e8620006ab640100000000026401000000009004565b505050505062001480565b6000600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620003765750600062000374600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200085c640100000000026401000000009004565b145b15620003995762000397600062000867640100000000026401000000009004565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200042057600080fd5b505af115801562000435573d6000803e3d6000fd5b505050506040513d60208110156200044c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620005b957600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200053b57600080fd5b505af115801562000550573d6000803e3d6000fd5b505050506040513d60208110156200056757600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b1580156200068f57600080fd5b505af1158015620006a4573d6000803e3d6000fd5b5050505050565b60006200080b600754600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200074e5780601f1062000722576101008083540402835291602001916200074e565b820191906000526020600020905b8154815290600101906020018083116200073057829003601f168201915b5050505050600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620007ed5780601f10620007c157610100808354040283529160200191620007ed565b820191906000526020600020905b815481529060010190602001808311620007cf57829003601f168201915b5050505050620249f062000889640100000000026401000000009004565b905060006001028160001916141515156200082557600080fd5b600160106000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000813b9050919050565b60006200088262000e56640100000000026401000000009004565b9050919050565b6000806000600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806200090f575060006200090d600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200085c640100000000026401000000009004565b145b15620009325762000930600062000867640100000000026401000000009004565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620009b957600080fd5b505af1158015620009ce573d6000803e3d6000fd5b505050506040513d6020811015620009e557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000b5257600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000ad457600080fd5b505af115801562000ae9573d6000803e3d6000fd5b505050506040513d602081101562000b0057600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101562000c0557808201518184015260208101905062000be8565b50505050905090810190601f16801562000c335780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801562000c5457600080fd5b505af115801562000c69573d6000803e3d6000fd5b505050506040513d602081101562000c8057600080fd5b81019080805190602001909291905050509050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f82888888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101562000d5357808201518184015260208101905062000d36565b50505050905090810190601f16801562000d815780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101562000dbc57808201518184015260208101905062000d9f565b50505050905090810190601f16801562000dea5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801562000e0d57600080fd5b505af115801562000e22573d6000803e3d6000fd5b50505050506040513d602081101562000e3a57600080fd5b8101908080519060200190929190505050915050949350505050565b60008062000e87731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6200085c640100000000026401000000009004565b111562000f3c57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000f326040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250620013b5640100000000026401000000009004565b60019050620013b2565b600062000f6c73c03a2615d5efaf5f49f60b7bb6583eaec212fdf16200085c640100000000026401000000009004565b1115620010215773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620010176040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250620013b5640100000000026401000000009004565b60019050620013b2565b60006200105173b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6200085c640100000000026401000000009004565b1115620011065773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620010fc6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250620013b5640100000000026401000000009004565b60019050620013b2565b60006200113673146500cfd35b22e4a392fe0adc06de1a1368ed486200085c640100000000026401000000009004565b1115620011eb5773146500cfd35b22e4a392fe0adc06de1a1368ed48600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620011e16040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250620013b5640100000000026401000000009004565b60019050620013b2565b60006200121b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756200085c640100000000026401000000009004565b11156200128157736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620013b2565b6000620012b17320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6200085c640100000000026401000000009004565b111562001317577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620013b2565b6000620013477351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6200085c640100000000026401000000009004565b1115620013ad577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620013b2565b600090505b90565b80600c9080519060200190620013cd929190620013d1565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200141457805160ff191683800117855562001445565b8280016001018555821562001445579182015b828111156200144457825182559160200191906001019062001427565b5b50905062001454919062001458565b5090565b6200147d91905b80821115620014795760008160009055506001016200145f565b5090565b90565b61257280620014906000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f1461010c578063053f14da146101635780630c8eb6751461018e57806327dc297e1461021e5780632fed1b0014610295578063323bb775146102c05780633270bb5b1461031757806338bbfa5014610346578063411449bb1461040357806356357d911461042e5780635ea7867a146104be578063614d08f81461054e5780636db7f77c146105de578063b5471dee146105e8578063bb4b573414610613578063c32b1dfa1461063e578063ca361d6714610669578063f348e8b214610694578063fa3fa196146106bf575b600080fd5b34801561011857600080fd5b50610121610702565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016f57600080fd5b50610178610727565b6040518082815260200191505060405180910390f35b34801561019a57600080fd5b506101a361072d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e35780820151818401526020810190506101c8565b50505050905090810190601f1680156102105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022a57600080fd5b506102936004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506107cb565b005b3480156102a157600080fd5b506102aa61080e565b6040518082815260200191505060405180910390f35b3480156102cc57600080fd5b506102d5610814565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032357600080fd5b5061032c61083a565b604051808215151515815260200191505060405180910390f35b34801561035257600080fd5b506104016004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061084d565b005b34801561040f57600080fd5b5061041861095c565b6040518082815260200191505060405180910390f35b34801561043a57600080fd5b50610443610963565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610483578082015181840152602081019050610468565b50505050905090810190601f1680156104b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104ca57600080fd5b506104d3610a01565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105135780820151818401526020810190506104f8565b50505050905090810190601f1680156105405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561055a57600080fd5b50610563610a9f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105a3578082015181840152602081019050610588565b50505050905090810190601f1680156105d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105e6610b3d565b005b3480156105f457600080fd5b506105fd610d8b565b6040518082815260200191505060405180910390f35b34801561061f57600080fd5b50610628610d91565b6040518082815260200191505060405180910390f35b34801561064a57600080fd5b50610653610d97565b6040518082815260200191505060405180910390f35b34801561067557600080fd5b5061067e610d9d565b6040518082815260200191505060405180910390f35b3480156106a057600080fd5b506106a9610da3565b6040518082815260200191505060405180910390f35b3480156106cb57600080fd5b50610700600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b505050505081565b61080a828260006040519080825280601f01601f1916602001820160405280156108045781602001602082028038833980820191505090505b5061084d565b5050565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900460ff1681565b610855610efe565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088e57600080fd5b60106000846000191660001916815260200190815260200160002060009054906101000a900460ff1615156108c257600080fd5b81600f90805190602001906108d89291906124a1565b506108e582600554611260565b6008819055507f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b4826008546040518082815260200191505060405180910390a161092c611554565b60106000846000191660001916815260200190815260200160002060006101000a81549060ff0219169055505050565b620249f081565b600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109f95780601f106109ce576101008083540402835291602001916109f9565b820191906000526020600020905b8154815290600101906020018083116109dc57829003601f168201915b505050505081565b600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b505050505081565b600080610be7600d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bd95780601f10610bae57610100808354040283529160200191610bd9565b820191906000526020600020905b815481529060010190602001808311610bbc57829003601f168201915b5050505050620249f0611624565b9150813410151515610bf857600080fd5b610d3a600d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c915780601f10610c6657610100808354040283529160200191610c91565b820191906000526020600020905b815481529060010190602001808311610c7457829003601f168201915b5050505050600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d2c5780601f10610d0157610100808354040283529160200191610d2c565b820191906000526020600020905b815481529060010190602001808311610d0f57829003601f168201915b5050505050620249f0611a01565b90506000600102816000191614151515610d5357600080fd5b600160106000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60035481565b60075481565b60045481565b60065481565b60095481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e4057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7f11fe0c7098e1a76afcc68f35abaa07ef156fa7d6dd2d39664812fe37348d1660405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f7057506000610f6e600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f94565b145b15610f8157610f7f6000611f9f565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561100757600080fd5b505af115801561101b573d6000803e3d6000fd5b505050506040513d602081101561103157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561119a57600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561111e57600080fd5b505af1158015611132573d6000803e3d6000fd5b505050506040513d602081101561114857600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561122057600080fd5b505af1158015611234573d6000803e3d6000fd5b505050506040513d602081101561124a57600080fd5b8101908080519060200190929190505050905090565b6000606060008060008693506000925060009150600090505b83518110156115355760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156112b457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156113cc575060397f010000000000000000000000000000000000000000000000000000000000000002848281518110151561135c57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561147d5781156113ef5760008614156113e557611535565b8580600190039650505b600a830292506030848281518110151561140557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250611528565b602e7f01000000000000000000000000000000000000000000000000000000000000000284828151811015156114af57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561152757600191505b5b8080600101915050611279565b60008611156115475785600a0a830292505b8294505050505092915050565b6000600a60009054906101000a900460ff161561157057611621565b60075442111561159f576001600a60006101000a81548160ff0219169083151502179055506008549050611601565b6003546008541015156115d1576001600a60006101000a81548160ff0219169083151502179055506003549050611600565b6004546008541115156115ff576001600a60006101000a81548160ff02191690831515021790555060045490505b5b5b600a60009054906101000a900460ff16156116205761161f81611fb0565b5b5b50565b600080600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061169657506000611694600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f94565b145b156116a7576116a56000611f9f565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561172d57600080fd5b505af1158015611741573d6000803e3d6000fd5b505050506040513d602081101561175757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156118c057600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561184457600080fd5b505af1158015611858573d6000803e3d6000fd5b505050506040513d602081101561186e57600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611971578082015181840152602081019050611956565b50505050905090810190601f16801561199e5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156119be57600080fd5b505af11580156119d2573d6000803e3d6000fd5b505050506040513d60208110156119e857600080fd5b8101908080519060200190929190505050905092915050565b6000806000600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611a7557506000611a73600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f94565b145b15611a8657611a846000611f9f565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b0c57600080fd5b505af1158015611b20573d6000803e3d6000fd5b505050506040513d6020811015611b3657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c9f57600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c2357600080fd5b505af1158015611c37573d6000803e3d6000fd5b505050506040513d6020811015611c4d57600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611d50578082015181840152602081019050611d35565b50505050905090810190601f168015611d7d5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611d9d57600080fd5b505af1158015611db1573d6000803e3d6000fd5b505050506040513d6020811015611dc757600080fd5b81019080805190602001909291905050509050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015611e99578082015181840152602081019050611e7e565b50505050905090810190601f168015611ec65780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015611eff578082015181840152602081019050611ee4565b50505050905090810190601f168015611f2c5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015611f4e57600080fd5b505af1158015611f62573d6000803e3d6000fd5b50505050506040513d6020811015611f7957600080fd5b81019080805190602001909291905050509150509392505050565b6000813b9050919050565b6000611fa9611ff1565b9050919050565b806009819055507f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c816040518082815260200191505060405180910390a150565b600080612011731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611f94565b11156120b357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120aa6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612487565b60019050612484565b60006120d273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611f94565b11156121745773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061216b6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612487565b60019050612484565b600061219373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611f94565b11156122355773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061222c6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612487565b60019050612484565b600061225473146500cfd35b22e4a392fe0adc06de1a1368ed48611f94565b11156122f65773146500cfd35b22e4a392fe0adc06de1a1368ed48600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122ed6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612487565b60019050612484565b6000612315736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611f94565b111561237957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612484565b60006123987320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611f94565b11156123fc577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612484565b600061241b7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611f94565b111561247f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612484565b600090505b90565b80600c908051906020019061249d9291906124a1565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124e257805160ff1916838001178555612510565b82800160010185558215612510579182015b8281111561250f5782518255916020019190600101906124f4565b5b50905061251d9190612521565b5090565b61254391905b8082111561253f576000816000905550600101612527565b5090565b905600a165627a7a7230582084346538b36e33969fd9e39bf57d37a0bb80f6a8398f20a6b19f78858f9743f90029",
  "deployedBytecode": "0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f1461010c578063053f14da146101635780630c8eb6751461018e57806327dc297e1461021e5780632fed1b0014610295578063323bb775146102c05780633270bb5b1461031757806338bbfa5014610346578063411449bb1461040357806356357d911461042e5780635ea7867a146104be578063614d08f81461054e5780636db7f77c146105de578063b5471dee146105e8578063bb4b573414610613578063c32b1dfa1461063e578063ca361d6714610669578063f348e8b214610694578063fa3fa196146106bf575b600080fd5b34801561011857600080fd5b50610121610702565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016f57600080fd5b50610178610727565b6040518082815260200191505060405180910390f35b34801561019a57600080fd5b506101a361072d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e35780820151818401526020810190506101c8565b50505050905090810190601f1680156102105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022a57600080fd5b506102936004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506107cb565b005b3480156102a157600080fd5b506102aa61080e565b6040518082815260200191505060405180910390f35b3480156102cc57600080fd5b506102d5610814565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032357600080fd5b5061032c61083a565b604051808215151515815260200191505060405180910390f35b34801561035257600080fd5b506104016004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061084d565b005b34801561040f57600080fd5b5061041861095c565b6040518082815260200191505060405180910390f35b34801561043a57600080fd5b50610443610963565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610483578082015181840152602081019050610468565b50505050905090810190601f1680156104b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104ca57600080fd5b506104d3610a01565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105135780820151818401526020810190506104f8565b50505050905090810190601f1680156105405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561055a57600080fd5b50610563610a9f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105a3578082015181840152602081019050610588565b50505050905090810190601f1680156105d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105e6610b3d565b005b3480156105f457600080fd5b506105fd610d8b565b6040518082815260200191505060405180910390f35b34801561061f57600080fd5b50610628610d91565b6040518082815260200191505060405180910390f35b34801561064a57600080fd5b50610653610d97565b6040518082815260200191505060405180910390f35b34801561067557600080fd5b5061067e610d9d565b6040518082815260200191505060405180910390f35b3480156106a057600080fd5b506106a9610da3565b6040518082815260200191505060405180910390f35b3480156106cb57600080fd5b50610700600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da9565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b505050505081565b61080a828260006040519080825280601f01601f1916602001820160405280156108045781602001602082028038833980820191505090505b5061084d565b5050565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900460ff1681565b610855610efe565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561088e57600080fd5b60106000846000191660001916815260200190815260200160002060009054906101000a900460ff1615156108c257600080fd5b81600f90805190602001906108d89291906124a1565b506108e582600554611260565b6008819055507f8848a3fb6a59cb2631434df52b885e109a25f8b683d0721da7ef92618182b4826008546040518082815260200191505060405180910390a161092c611554565b60106000846000191660001916815260200190815260200160002060006101000a81549060ff0219169055505050565b620249f081565b600d8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109f95780601f106109ce576101008083540402835291602001916109f9565b820191906000526020600020905b8154815290600101906020018083116109dc57829003601f168201915b505050505081565b600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b505050505081565b600080610be7600d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bd95780601f10610bae57610100808354040283529160200191610bd9565b820191906000526020600020905b815481529060010190602001808311610bbc57829003601f168201915b5050505050620249f0611624565b9150813410151515610bf857600080fd5b610d3a600d8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c915780601f10610c6657610100808354040283529160200191610c91565b820191906000526020600020905b815481529060010190602001808311610c7457829003601f168201915b5050505050600e8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d2c5780601f10610d0157610100808354040283529160200191610d2c565b820191906000526020600020905b815481529060010190602001808311610d0f57829003601f168201915b5050505050620249f0611a01565b90506000600102816000191614151515610d5357600080fd5b600160106000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60035481565b60075481565b60045481565b60065481565b60095481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e0457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e4057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7f11fe0c7098e1a76afcc68f35abaa07ef156fa7d6dd2d39664812fe37348d1660405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f7057506000610f6e600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f94565b145b15610f8157610f7f6000611f9f565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561100757600080fd5b505af115801561101b573d6000803e3d6000fd5b505050506040513d602081101561103157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561119a57600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561111e57600080fd5b505af1158015611132573d6000803e3d6000fd5b505050506040513d602081101561114857600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561122057600080fd5b505af1158015611234573d6000803e3d6000fd5b505050506040513d602081101561124a57600080fd5b8101908080519060200190929190505050905090565b6000606060008060008693506000925060009150600090505b83518110156115355760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156112b457fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156113cc575060397f010000000000000000000000000000000000000000000000000000000000000002848281518110151561135c57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561147d5781156113ef5760008614156113e557611535565b8580600190039650505b600a830292506030848281518110151561140557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250611528565b602e7f01000000000000000000000000000000000000000000000000000000000000000284828151811015156114af57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561152757600191505b5b8080600101915050611279565b60008611156115475785600a0a830292505b8294505050505092915050565b6000600a60009054906101000a900460ff161561157057611621565b60075442111561159f576001600a60006101000a81548160ff0219169083151502179055506008549050611601565b6003546008541015156115d1576001600a60006101000a81548160ff0219169083151502179055506003549050611600565b6004546008541115156115ff576001600a60006101000a81548160ff02191690831515021790555060045490505b5b5b600a60009054906101000a900460ff16156116205761161f81611fb0565b5b5b50565b600080600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061169657506000611694600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f94565b145b156116a7576116a56000611f9f565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561172d57600080fd5b505af1158015611741573d6000803e3d6000fd5b505050506040513d602081101561175757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156118c057600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561184457600080fd5b505af1158015611858573d6000803e3d6000fd5b505050506040513d602081101561186e57600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611971578082015181840152602081019050611956565b50505050905090810190601f16801561199e5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156119be57600080fd5b505af11580156119d2573d6000803e3d6000fd5b505050506040513d60208110156119e857600080fd5b8101908080519060200190929190505050905092915050565b6000806000600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611a7557506000611a73600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f94565b145b15611a8657611a846000611f9f565b505b600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b0c57600080fd5b505af1158015611b20573d6000803e3d6000fd5b505050506040513d6020811015611b3657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c9f57600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611c2357600080fd5b505af1158015611c37573d6000803e3d6000fd5b505050506040513d6020811015611c4d57600080fd5b8101908080519060200190929190505050600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611d50578082015181840152602081019050611d35565b50505050905090810190601f168015611d7d5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611d9d57600080fd5b505af1158015611db1573d6000803e3d6000fd5b505050506040513d6020811015611dc757600080fd5b81019080805190602001909291905050509050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015611e99578082015181840152602081019050611e7e565b50505050905090810190601f168015611ec65780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015611eff578082015181840152602081019050611ee4565b50505050905090810190601f168015611f2c5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015611f4e57600080fd5b505af1158015611f62573d6000803e3d6000fd5b50505050506040513d6020811015611f7957600080fd5b81019080805190602001909291905050509150509392505050565b6000813b9050919050565b6000611fa9611ff1565b9050919050565b806009819055507f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c816040518082815260200191505060405180910390a150565b600080612011731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611f94565b11156120b357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120aa6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612487565b60019050612484565b60006120d273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611f94565b11156121745773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061216b6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612487565b60019050612484565b600061219373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611f94565b11156122355773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061222c6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612487565b60019050612484565b600061225473146500cfd35b22e4a392fe0adc06de1a1368ed48611f94565b11156122f65773146500cfd35b22e4a392fe0adc06de1a1368ed48600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122ed6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612487565b60019050612484565b6000612315736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611f94565b111561237957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612484565b60006123987320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611f94565b11156123fc577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612484565b600061241b7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611f94565b111561247f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612484565b600090505b90565b80600c908051906020019061249d9291906124a1565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124e257805160ff1916838001178555612510565b82800160010185558215612510579182015b8281111561250f5782518255916020019190600101906124f4565b5b50905061251d9190612521565b5090565b61254391905b8082111561253f576000816000905550600101612527565b5090565b905600a165627a7a7230582084346538b36e33969fd9e39bf57d37a0bb80f6a8398f20a6b19f78858f9743f90029",
  "sourceMap": "875:5455:17:-;;;1483:5:3;1459:29;;;;;;;;;;;;;;;;;;;;2640:841:17;8:9:-1;5:2;;;30:1;27;20:12;5:2;2640:841:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2837:12;2859:13;2882;1017:10:0;1007:7;;:20;;;;;;;;;;;;;;;;;;2767:13:3;2781:1;2767:16;;;;;;;;;;;;;2753:11;:30;;;;2805:13;2819:1;2805:16;;;;;;;;;;;;;2793:9;:28;;;;2851:11;;2839:9;;:23;2831:32;;;;;;;;2897:13;2911:1;2897:16;;;;;;;;;;;;;2874:20;:39;;;;2940:13;2954:1;2940:16;;;;;;;;;;;;;2923:14;:33;;;;2979:13;2993:1;2979:16;;;;;;;;;;;;;2966:10;:29;;;;3026:3;3013:10;;:16;3005:25;;;;;;;;3057:12;3041:13;:28;;;;;;;;;;;;:::i;:::-;;3106:13;3120:1;3106:16;;;;;;;;;;;;;3079:24;;:43;;;;;;;;;;;;;;;;;;3142:13;3156:1;3142:16;;;;;;;;;;;;;3132:7;;:26;;;;;;;;;;;;;;;;;;2620:545;;;2924:58:17;1928:4:21;2964:17:17;;1884:4:21;2942:19:17;;:39;2924:17;;;:58;;;:::i;:::-;3123:16;3102:18;:37;;;;;;;;;;;;:::i;:::-;;3164:11;3149:12;:26;;;;;;;;;;;;:::i;:::-;;3364:7;3357:3;3344:10;;:16;:27;;3336:36;;;;;;;;3382:13;:11;;;:13;;;:::i;:::-;2640:841;;;;;875:5455;;6602:114:21;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;;;:25;;;:::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;;;:35;;;:::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:21;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:21;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6680:8;;;;;;;;;;;:21;;;6702:6;6680:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6680:29:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6680:29:21;;;;6602:114;:::o;5396:932:17:-;6095:15;6113:138;6141:10;;6165:18;6113:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:12;6113:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;6113:14;;;:138;;;:::i;:::-;6095:156;;6280:1;6269:12;;:7;:12;;;;;6261:21;;;;;;;;6317:4;6292:13;:22;6306:7;6292:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5396:932;:::o;6858:150:21:-;6920:10;6986:5;6974:18;6965:27;;6951:51;;;:::o;2564:183::-;2627:4;2647:21;:19;;;:21;;;:::i;:::-;2640:28;;2564:183;;;:::o;5732:383::-;5848:10;5869;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;;;:25;;;:::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;;;:35;;;:::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:21;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:21;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;5882:8;;;;;;;;;;;:17;;;5900:10;5912:8;5882:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5882:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5882:39:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5882:39:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5882:39:21;;;;;;;;;;;;;;;;5869:52;;6030:8;;;;;;;;;;;:27;;;6064:5;6071:9;6082:10;6094:3;6099:8;6030:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6030:78:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6030:78:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6030:78:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6030:78:21;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6030:78:21;;;;;;;;;;;;;;;;6023:85;;5732:383;;;;;;;:::o;2752:1749::-;2800:4;2875:1;2819:55;2831:42;2819:11;;;:55;;;:::i;:::-;:57;2815:245;;;2929:42;2901:3;;:71;;;;;;;;;;;;;;;;;;2986:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;3045:4;3038:11;;;;2815:245;3129:1;3073:55;3085:42;3073:11;;;:55;;;:::i;:::-;:57;3069:254;;;3191:42;3163:3;;:71;;;;;;;;;;;;;;;;;;3248:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;3308:4;3301:11;;;;3069:254;3392:1;3336:55;3348:42;3336:11;;;:55;;;:::i;:::-;:57;3332:249;;;3452:42;3424:3;;:71;;;;;;;;;;;;;;;;;;3509:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;3566:4;3559:11;;;;3332:249;3650:1;3594:55;3606:42;3594:11;;;:55;;;:::i;:::-;:57;3590:253;;;3712:42;3684:3;;:71;;;;;;;;;;;;;;;;;;3769:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;3828:4;3821:11;;;;3590:253;3912:1;3856:55;3868:42;3856:11;;;:55;;;:::i;:::-;:57;3852:201;;;3974:42;3946:3;;:71;;;;;;;;;;;;;;;;;;4038:4;4031:11;;;;3852:201;4122:1;4066:55;4078:42;4066:11;;;:55;;;:::i;:::-;:57;4062:200;;;4183:42;4155:3;;:71;;;;;;;;;;;;;;;;;;4247:4;4240:11;;;;4062:200;4331:1;4275:55;4287:42;4275:11;;;:55;;;:::i;:::-;:57;4271:202;;;4394:42;4366:3;;:71;;;;;;;;;;;;;;;;;;4458:4;4451:11;;;;4271:202;4489:5;4482:12;;2752:1749;;:::o;7645:118::-;7743:13;7719:21;:37;;;;;;;;;;;;:::i;:::-;;7645:118;:::o;875:5455:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "875:5455:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:21:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1399:21:3;;;;;;;;;;;;;;;;;;;;;;;1251:34:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:34:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1251:34:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4507:111:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4507:111:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1110:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1110:32:3;;;;;;;;;;;;;;;;;;;;;;;1009:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1009:39:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1459:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;4750:531:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4750:531:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1062:48:17;;;;;;;;;;;;;;;;;;;;;;;992:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;992:32:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;992:32:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:26:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1030:26:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;976:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;976:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;976:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3871:599:17;;;;;;1054:21:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1054:21:3;;;;;;;;;;;;;;;;;;;;;;;1347:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:22:3;;;;;;;;;;;;;;;;;;;;;;;1081:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1081:23:3;;;;;;;;;;;;;;;;;;;;;;;1222:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1222:26:3;;;;;;;;;;;;;;;;;;;;;;;1426:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:27:3;;;;;;;;;;;;;;;;;;;;;;;1131:198:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1131:198:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22;;;;;;;;;;;;;:::o;1399:21:3:-;;;;:::o;1251:34:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4507:111:21:-;4573:38;4584:4;4590:6;4608:1;4598:12;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4598:12:21;;;;4573:10;:38::i;:::-;4507:111;;:::o;1110:32:3:-;;;;:::o;1009:39::-;;;;;;;;;;;;;:::o;1459:29::-;;;;;;;;;;;;;:::o;4750:531:17:-;4854:20;:18;:20::i;:::-;4840:34;;:10;:34;;;4832:43;;;;;;;;4893:13;:22;4907:7;4893:22;;;;;;;;;;;;;;;;;;;;;;;;;;;4885:31;;;;;;;;4988:6;4965:20;:29;;;;;;;;;;;;:::i;:::-;;5016:38;5025:6;5033:20;;5016:8;:38::i;:::-;5004:9;:50;;;;5069:27;5086:9;;5069:27;;;;;;;;;;;;;;;;;;5106:17;:15;:17::i;:::-;5207:13;:22;5221:7;5207:22;;;;;;;;;;;;;;;;;;5200:29;;;;;;;;;;;4750:531;;;:::o;1062:48::-;1104:6;1062:48;:::o;992:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1030:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;976:27:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3871:599:17:-;3932:9;4261:15;3944:57;3962:18;3944:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;3944:17;:57::i;:::-;3932:69;;4032:4;4019:9;:17;;4011:26;;;;;;;;4279:114;4307:18;4279:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4339:12;4279:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;4279:14;:114::i;:::-;4261:132;;4422:1;4411:12;;:7;:12;;;;;4403:21;;;;;;;;4459:4;4434:13;:22;4448:7;4434:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3871:599;;:::o;1054:21:3:-;;;;:::o;1347:22::-;;;;:::o;1081:23::-;;;;:::o;1222:26::-;;;;:::o;1426:27::-;;;;:::o;1131:198:0:-;1390:7;;;;;;;;;;;1376:21;;:10;:21;;;1368:30;;;;;;;;1235:1;1213:24;;:10;:24;;;;1205:33;;;;;;;;1281:10;1253:39;;1272:7;;;;;;;;;;;1253:39;;;;;;;;;;;;1312:10;1302:7;;:20;;;;;;;;;;;;;;;;;;1131:198;:::o;6485:112:21:-;6545:7;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:21;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:21;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6570:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6570:20:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6570:20:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6570:20:21;;;;;;;;;;;;;;;;6563:27;;6485:112;:::o;7013:593::-;7074:4;7090:20;7132:9;7155:13;7191:6;7119:2;7090:32;;7144:1;7132:13;;7171:5;7155:21;;7198:1;7191:8;;7186:357;7203:7;:14;7201:1;:16;7186:357;;;7256:2;7242:16;;:7;7250:1;7242:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7241:38;;;;;7276:2;7262:16;;:7;7270:1;7262:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7241:38;7237:295;;;7302:8;7298:102;;;7342:1;7336:2;:7;7332:49;;;7345:5;;7332:49;7377:4;;;;;;;;7298:102;7425:2;7417:10;;;;7472:2;7458:7;7466:1;7458:10;;;;;;;;;;;;;;;;;;;;7453:16;;;:21;7445:29;;;;7237:295;;;7513:2;7499:16;;:7;7507:1;7499:10;;;;;;;;;;;;;;;;;;;;:16;;;;7495:37;;;7528:4;7517:15;;7495:37;7237:295;7219:3;;;;;;;7186:357;;;7561:1;7556:2;:6;7552:26;;;7576:2;7572;:6;7564:14;;;;7552:26;7595:4;7588:11;;7013:593;;;;;;;;:::o;3382:851:3:-;3494:23;3432:9;;;;;;;;;;;3428:56;;;3477:7;;3428:56;3537:10;;3531:3;:16;3527:616;;;3656:4;3644:9;;:16;;;;;;;;;;;;;;;;;;3752:9;;3731:30;;3527:616;;;3795:9;;3782;;:22;;3778:365;;;3896:4;3884:9;;:16;;;;;;;;;;;;;;;;;;3935:9;;3914:30;;3778:365;;;3978:11;;3965:9;;:24;;3961:182;;;4082:4;4070:9;;:16;;;;;;;;;;;;;;;;;;4121:11;;4100:32;;3961:182;3778:365;3527:616;4157:9;;;;;;;;;;;4153:74;;;4182:34;4197:18;4182:14;:34::i;:::-;4153:74;3382:851;;:::o;4915:159:21:-;5006:4;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:21;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:21;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;5028:8;;;;;;;;;;;:17;;;5046:10;5058:8;5028:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5028:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5028:39:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5028:39:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5028:39:21;;;;;;;;;;;;;;;;5021:46;;4915:159;;;;:::o;6120:359::-;6220:10;6241;2254:1;2248:3;;;;;;;;;;;2240:15;;;2239:49;;;;2286:1;2259:25;2279:3;;;;;;;;;;;2259:11;:25::i;:::-;:28;2239:49;2236:101;;;2302:35;1970:1;2302:19;:35::i;:::-;;2236:101;2372:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:16:21;;;;;;;;;;;;;;;;2351:37;;2359:8;;;;;;;;;;;2351:37;;;;2348:92;;;2423:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2423:16:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2423:16:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2423:16:21;;;;;;;;;;;;;;;;2402:8;;:38;;;;;;;;;;;;;;;;;;2348:92;6254:8;;;;;;;;;;;:17;;;6272:10;6284:8;6254:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6254:39:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6254:39:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6254:39:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6254:39:21;;;;;;;;;;;;;;;;6241:52;;6402:8;;;;;;;;;;;:27;;;6436:5;6443:1;6446:10;6458:3;6463:8;6402:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6402:70:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6402:70:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6402:70:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6402:70:21;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6402:70:21;;;;;;;;;;;;;;;;6395:77;;6120:359;;;;;;:::o;6858:150::-;6920:10;6986:5;6974:18;6965:27;;6951:51;;;:::o;2564:183::-;2627:4;2647:21;:19;:21::i;:::-;2640:28;;2564:183;;;:::o;4388:166:3:-;4475:20;4457:15;:38;;;;4510:37;4526:20;4510:37;;;;;;;;;;;;;;;;;;4388:166;:::o;2752:1749:21:-;2800:4;2875:1;2819:55;2831:42;2819:11;:55::i;:::-;:57;2815:245;;;2929:42;2901:3;;:71;;;;;;;;;;;;;;;;;;2986:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3045:4;3038:11;;;;2815:245;3129:1;3073:55;3085:42;3073:11;:55::i;:::-;:57;3069:254;;;3191:42;3163:3;;:71;;;;;;;;;;;;;;;;;;3248:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;3308:4;3301:11;;;;3069:254;3392:1;3336:55;3348:42;3336:11;:55::i;:::-;:57;3332:249;;;3452:42;3424:3;;:71;;;;;;;;;;;;;;;;;;3509:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;3566:4;3559:11;;;;3332:249;3650:1;3594:55;3606:42;3594:11;:55::i;:::-;:57;3590:253;;;3712:42;3684:3;;:71;;;;;;;;;;;;;;;;;;3769:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3828:4;3821:11;;;;3590:253;3912:1;3856:55;3868:42;3856:11;:55::i;:::-;:57;3852:201;;;3974:42;3946:3;;:71;;;;;;;;;;;;;;;;;;4038:4;4031:11;;;;3852:201;4122:1;4066:55;4078:42;4066:11;:55::i;:::-;:57;4062:200;;;4183:42;4155:3;;:71;;;;;;;;;;;;;;;;;;4247:4;4240:11;;;;4062:200;4331:1;4275:55;4287:42;4275:11;:55::i;:::-;:57;4271:202;;;4394:42;4366:3;;:71;;;;;;;;;;;;;;;;;;4458:4;4451:11;;;;4271:202;4489:5;4482:12;;2752:1749;;:::o;7645:118::-;7743:13;7719:21;:37;;;;;;;;;;;;:::i;:::-;;7645:118;:::o;875:5455:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/*\n    Copyright 2017-2018 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity ^0.4.24;\n\nimport \"./oraclizeAPI.sol\";\nimport \"../libraries/MathLib.sol\";\nimport \"../MarketContract.sol\";\n\n\n/// @title MarketContract first example of a MarketProtocol contract using Oraclize services\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractOraclize is MarketContract, usingOraclize {\n    using MathLib for uint;\n\n    // constants\n    string public ORACLE_DATA_SOURCE;\n    string public ORACLE_QUERY;\n    uint constant public QUERY_CALLBACK_GAS = 150000;\n    //uint constant public QUERY_CALLBACK_GAS_PRICE = 20000000000 wei; // 20 gwei - need to make this dynamic!\n\n    // state variables\n    string public lastPriceQueryResult;\n    mapping(bytes32 => bool) validQueryIDs;\n\n    /// @param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n    /// @param baseAddresses array of 2 addresses needed for our contract including:\n    ///     creatorAddress                  address of the person creating the contract\n    ///     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n    /// @param contractSpecs array of unsigned integers including:\n    ///     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n    ///     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n    ///     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n    ///                             an integer\n    ///     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n    ///     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n    /// @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n    /// see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n    /// @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples\n    constructor(\n        string contractName,\n        address[2] baseAddresses,\n        uint[5] contractSpecs,\n        string oracleDataSource,\n        string oracleQuery\n    ) MarketContract(\n        contractName,\n        baseAddresses,\n        contractSpecs\n    )  public\n    {\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n        //oraclize_setCustomGasPrice(QUERY_CALLBACK_GAS_PRICE);  //TODO: allow this to be changed by creator.\n        ORACLE_DATA_SOURCE = oracleDataSource;\n        ORACLE_QUERY = oracleQuery;\n\n        // Future timestamp must be within 60 days from now.\n        // https://docs.oraclize.it/#ethereum-quick-start-schedule-a-query-in-the-future\n        require(EXPIRATION - now <= 60 days);\n        queryOracle();                      // Schedule a call to oracle at contract expiration time.\n    }\n\n    /// @notice allows a user to request an extra query to oracle in order to push the contract into\n    /// settlement.  A user may call this as many times as they like, since they are the ones paying for\n    /// the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n    /// settle a contract early if a price cap or floor has been breached.\n    function requestEarlySettlement() external payable {\n        uint cost = oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS);\n        require(msg.value >= cost); // user must pay enough to cover query and callback\n        // create immediate query, we must make sure to store this one separately, so\n        // we do not schedule recursive callbacks when the query completes.\n        bytes32 queryId = oraclize_query(\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        require(queryId != 0);\n        validQueryIDs[queryId] = true;\n    }\n\n    /*\n    // PUBLIC METHODS\n    */\n\n    /// @notice only public for callbacks from oraclize, do not call\n    /// @param queryID of the returning query, this should match our own internal mapping\n    /// @param result query to be processed\n    /// @param proof result proof\n    function __callback(bytes32 queryID, string result, bytes proof) public {\n        require(msg.sender == oraclize_cbAddress());\n        require(validQueryIDs[queryID]);  // At expiration or early settlement.\n        lastPriceQueryResult = result;\n        lastPrice = parseInt(result, PRICE_DECIMAL_PLACES);\n        emit UpdatedLastPrice(lastPrice);\n        checkSettlement();  // Verify settlement at expiration or requested early settlement.\n        delete validQueryIDs[queryID];\n        proof;  // silence compiler warnings\n    }\n\n    /*\n    // PRIVATE METHODS\n    */\n\n    /// @dev call to oraclize to set up our query and record its hash.\n    function queryOracle() private {\n        // Require that sufficient funds are available to pay for the query.\n        // require(oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS) < this.balance);\n        // NOTE: Currently the first oracle query call to oraclize.it is free. Since our\n        // expiration query will always be the first, there is no needed pre-funding amount\n        // to create this query.  When we go to the centralized query hub - this will change\n        // due to the fact that the address creating the query will always be the query hub.\n        // will have to do the analysis to see which is cheaper, free queries, or lower deployment\n        // gas costs\n        bytes32 queryId = oraclize_query(\n            EXPIRATION,\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        require(queryId != 0);\n        validQueryIDs[queryId] = true;\n    }\n}\n",
  "sourcePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
  "ast": {
    "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [
        3888
      ]
    },
    "id": 3889,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3704,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:17"
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 3705,
        "nodeType": "ImportDirective",
        "scope": 3889,
        "sourceUnit": 4850,
        "src": "634:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 3706,
        "nodeType": "ImportDirective",
        "scope": 3889,
        "sourceUnit": 2799,
        "src": "662:34:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 3707,
        "nodeType": "ImportDirective",
        "scope": 3889,
        "sourceUnit": 1019,
        "src": "697:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3708,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1018,
              "src": "910:14:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1018",
                "typeString": "contract MarketContract"
              }
            },
            "id": 3709,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3710,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4849,
              "src": "926:13:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$4849",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 3711,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:17"
          }
        ],
        "contractDependencies": [
          55,
          1018,
          4849
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3888,
        "linearizedBaseContracts": [
          3888,
          4849,
          1018,
          55
        ],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3714,
            "libraryName": {
              "contractScope": null,
              "id": 3712,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2798,
              "src": "952:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$2798",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:17",
            "typeName": {
              "id": 3713,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3716,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "992:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3715,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3718,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1030:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3717,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3721,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1062:48:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3719,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 3720,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3723,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1251:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3722,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1251:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3727,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1291:38:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 3726,
              "keyType": {
                "id": 3724,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1291:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 3725,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1310:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3774,
              "nodeType": "Block",
              "src": "2914:567:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3750,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "2942:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3751,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4272,
                          "src": "2964:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "2942:39:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 3749,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4707,
                      "src": "2924:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 3753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:58:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3754,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:58:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3755,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3716,
                      "src": "3102:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3756,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3739,
                      "src": "3123:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3102:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3758,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:37:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3759,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3718,
                      "src": "3149:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3760,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3741,
                      "src": "3164:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3149:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3762,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:26:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3764,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "3344:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3765,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8185,
                            "src": "3357:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3344:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 3767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3364:7:17",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5184000_by_1",
                            "typeString": "int_const 5184000"
                          },
                          "value": "60"
                        },
                        "src": "3344:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "3336:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3336:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3770,
                  "nodeType": "ExpressionStatement",
                  "src": "3336:36:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3771,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3887,
                      "src": "3382:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3773,
                  "nodeType": "ExpressionStatement",
                  "src": "3382:13:17"
                }
              ]
            },
            "documentation": "@param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n @param baseAddresses array of 2 addresses needed for our contract including:\n     creatorAddress                  address of the person creating the contract\n     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples",
            "id": 3775,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3744,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3729,
                    "src": "2837:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3745,
                    "name": "baseAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3733,
                    "src": "2859:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                      "typeString": "address[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3746,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3737,
                    "src": "2882:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 3747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3743,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1018,
                  "src": "2813:14:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$1018_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2813:88:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3729,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2661:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2661:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3733,
                  "name": "baseAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2690:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3730,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2690:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3732,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 3731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2698:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2690:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3737,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2724:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3734,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2724:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3736,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 3735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2729:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2724:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3739,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2755:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3738,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3741,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2788:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3740,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2788:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2651:161:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2914:0:17"
            },
            "scope": 3888,
            "src": "2640:841:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3812,
              "nodeType": "Block",
              "src": "3922:548:17",
              "statements": [
                {
                  "assignments": [
                    3779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3779,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 3813,
                      "src": "3932:9:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3778,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3932:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3784,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3781,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "3962:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3782,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "3982:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3780,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4536,
                        4554
                      ],
                      "referencedDeclaration": 4554,
                      "src": "3944:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 3783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3944:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3932:69:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3786,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8183,
                            "src": "4019:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4019:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3788,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "4032:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4019:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4011:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4011:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3791,
                  "nodeType": "ExpressionStatement",
                  "src": "4011:26:17"
                },
                {
                  "assignments": [
                    3793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3793,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 3813,
                      "src": "4261:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3792,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4261:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3799,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3795,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "4307:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3796,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3718,
                        "src": "4339:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3797,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "4365:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3794,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4583,
                        4614,
                        4649,
                        4682
                      ],
                      "referencedDeclaration": 4682,
                      "src": "4279:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 3798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:114:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4261:132:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3801,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3793,
                          "src": "4411:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4422:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4411:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4403:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3805,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:21:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3806,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "4434:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3808,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3807,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "4448:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4434:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4459:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4434:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3811,
                  "nodeType": "ExpressionStatement",
                  "src": "4434:29:17"
                }
              ]
            },
            "documentation": "@notice allows a user to request an extra query to oracle in order to push the contract into\n settlement.  A user may call this as many times as they like, since they are the ones paying for\n the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n settle a contract early if a price cap or floor has been breached.",
            "id": 3813,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3902:2:17"
            },
            "payable": true,
            "returnParameters": {
              "id": 3777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3922:0:17"
            },
            "scope": 3888,
            "src": "3871:599:17",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3861,
              "nodeType": "Block",
              "src": "4822:459:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3823,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8183,
                            "src": "4840:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4840:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3825,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4694,
                            "src": "4854:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 3826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4854:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4840:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3822,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4832:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4832:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3829,
                  "nodeType": "ExpressionStatement",
                  "src": "4832:43:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3831,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3727,
                          "src": "4893:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 3833,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3832,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3815,
                          "src": "4907:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4893:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4885:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3835,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:31:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3836,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3723,
                      "src": "4965:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3837,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3817,
                      "src": "4988:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4965:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3839,
                  "nodeType": "ExpressionStatement",
                  "src": "4965:29:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3840,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "5004:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3842,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3817,
                          "src": "5025:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3843,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "5033:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3841,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4828,
                        "src": "5016:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5016:38:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5004:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3846,
                  "nodeType": "ExpressionStatement",
                  "src": "5004:50:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3848,
                        "name": "lastPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "5086:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3847,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "5069:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3850,
                  "nodeType": "EmitStatement",
                  "src": "5064:32:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3851,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "5106:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5106:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3853,
                  "nodeType": "ExpressionStatement",
                  "src": "5106:17:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5200:29:17",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3854,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "5207:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3856,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3855,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3815,
                        "src": "5221:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5207:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3858,
                  "nodeType": "ExpressionStatement",
                  "src": "5200:29:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3859,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3819,
                    "src": "5239:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 3860,
                  "nodeType": "ExpressionStatement",
                  "src": "5239:5:17"
                }
              ]
            },
            "documentation": "@notice only public for callbacks from oraclize, do not call\n @param queryID of the returning query, this should match our own internal mapping\n @param result query to be processed\n @param proof result proof",
            "id": 3862,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3815,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3862,
                  "src": "4770:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3814,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4770:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3817,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3862,
                  "src": "4787:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3816,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4787:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3819,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 3862,
                  "src": "4802:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3818,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4802:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4769:45:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4822:0:17"
            },
            "scope": 3888,
            "src": "4750:531:17",
            "stateMutability": "nonpayable",
            "superFunction": 4521,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3886,
              "nodeType": "Block",
              "src": "5427:901:17",
              "statements": [
                {
                  "assignments": [
                    3866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3866,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 3887,
                      "src": "6095:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3865,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6095:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3873,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3868,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "6141:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3869,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "6165:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3870,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3718,
                        "src": "6197:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3871,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "6223:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3867,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4583,
                        4614,
                        4649,
                        4682
                      ],
                      "referencedDeclaration": 4649,
                      "src": "6113:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 3872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6113:138:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6095:156:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3875,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "6269:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6280:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6269:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "6261:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6261:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3879,
                  "nodeType": "ExpressionStatement",
                  "src": "6261:21:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3880,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "6292:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3882,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3881,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "6306:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6292:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6317:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6292:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3885,
                  "nodeType": "ExpressionStatement",
                  "src": "6292:29:17"
                }
              ]
            },
            "documentation": "@dev call to oraclize to set up our query and record its hash.",
            "id": 3887,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5416:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:0:17"
            },
            "scope": 3888,
            "src": "5396:932:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 3889,
        "src": "875:5455:17"
      }
    ],
    "src": "608:5723:17"
  },
  "legacyAST": {
    "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [
        3888
      ]
    },
    "id": 3889,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3704,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:17"
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 3705,
        "nodeType": "ImportDirective",
        "scope": 3889,
        "sourceUnit": 4850,
        "src": "634:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 3706,
        "nodeType": "ImportDirective",
        "scope": 3889,
        "sourceUnit": 2799,
        "src": "662:34:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 3707,
        "nodeType": "ImportDirective",
        "scope": 3889,
        "sourceUnit": 1019,
        "src": "697:31:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3708,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1018,
              "src": "910:14:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1018",
                "typeString": "contract MarketContract"
              }
            },
            "id": 3709,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:17"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3710,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4849,
              "src": "926:13:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$4849",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 3711,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:17"
          }
        ],
        "contractDependencies": [
          55,
          1018,
          4849
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 3888,
        "linearizedBaseContracts": [
          3888,
          4849,
          1018,
          55
        ],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3714,
            "libraryName": {
              "contractScope": null,
              "id": 3712,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2798,
              "src": "952:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$2798",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:17",
            "typeName": {
              "id": 3713,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3716,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "992:32:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3715,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3718,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1030:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3717,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3721,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1062:48:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3719,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 3720,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:17",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3723,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1251:34:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3722,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1251:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3727,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 3888,
            "src": "1291:38:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 3726,
              "keyType": {
                "id": 3724,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1299:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1291:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 3725,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1310:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3774,
              "nodeType": "Block",
              "src": "2914:567:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3750,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "2942:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3751,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4272,
                          "src": "2964:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "2942:39:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 3749,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4707,
                      "src": "2924:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 3753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:58:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3754,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:58:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3755,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3716,
                      "src": "3102:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3756,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3739,
                      "src": "3123:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3102:37:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3758,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:37:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3759,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3718,
                      "src": "3149:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3760,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3741,
                      "src": "3164:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3149:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3762,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:26:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 3764,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "3344:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 3765,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8185,
                            "src": "3357:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3344:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 3767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3364:7:17",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5184000_by_1",
                            "typeString": "int_const 5184000"
                          },
                          "value": "60"
                        },
                        "src": "3344:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "3336:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3336:36:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3770,
                  "nodeType": "ExpressionStatement",
                  "src": "3336:36:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3771,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3887,
                      "src": "3382:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3382:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3773,
                  "nodeType": "ExpressionStatement",
                  "src": "3382:13:17"
                }
              ]
            },
            "documentation": "@param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n @param baseAddresses array of 2 addresses needed for our contract including:\n     creatorAddress                  address of the person creating the contract\n     collateralTokenAddress          address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples",
            "id": 3775,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3744,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3729,
                    "src": "2837:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3745,
                    "name": "baseAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3733,
                    "src": "2859:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                      "typeString": "address[2] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3746,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3737,
                    "src": "2882:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 3747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3743,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1018,
                  "src": "2813:14:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$1018_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2813:88:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3729,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2661:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2661:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3733,
                  "name": "baseAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2690:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                    "typeString": "address[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3730,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2690:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3732,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 3731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2698:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2690:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$2_storage_ptr",
                      "typeString": "address[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3737,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2724:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3734,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2724:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3736,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 3735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2729:1:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2724:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3739,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2755:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3738,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2755:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3741,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 3775,
                  "src": "2788:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3740,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2788:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2651:161:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2914:0:17"
            },
            "scope": 3888,
            "src": "2640:841:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3812,
              "nodeType": "Block",
              "src": "3922:548:17",
              "statements": [
                {
                  "assignments": [
                    3779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3779,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 3813,
                      "src": "3932:9:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3778,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3932:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3784,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3781,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "3962:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3782,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "3982:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3780,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4536,
                        4554
                      ],
                      "referencedDeclaration": 4554,
                      "src": "3944:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 3783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3944:57:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3932:69:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3786,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8183,
                            "src": "4019:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4019:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3788,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3779,
                          "src": "4032:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4019:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4011:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4011:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3791,
                  "nodeType": "ExpressionStatement",
                  "src": "4011:26:17"
                },
                {
                  "assignments": [
                    3793
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3793,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 3813,
                      "src": "4261:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3792,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4261:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3799,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3795,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "4307:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3796,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3718,
                        "src": "4339:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3797,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "4365:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3794,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4583,
                        4614,
                        4649,
                        4682
                      ],
                      "referencedDeclaration": 4682,
                      "src": "4279:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 3798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4279:114:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4261:132:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3801,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3793,
                          "src": "4411:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4422:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4411:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4403:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3805,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:21:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3806,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "4434:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3808,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3807,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "4448:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4434:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4459:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4434:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3811,
                  "nodeType": "ExpressionStatement",
                  "src": "4434:29:17"
                }
              ]
            },
            "documentation": "@notice allows a user to request an extra query to oracle in order to push the contract into\n settlement.  A user may call this as many times as they like, since they are the ones paying for\n the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n settle a contract early if a price cap or floor has been breached.",
            "id": 3813,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3902:2:17"
            },
            "payable": true,
            "returnParameters": {
              "id": 3777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3922:0:17"
            },
            "scope": 3888,
            "src": "3871:599:17",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3861,
              "nodeType": "Block",
              "src": "4822:459:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3823,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8183,
                            "src": "4840:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4840:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3825,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4694,
                            "src": "4854:18:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 3826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4854:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4840:34:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3822,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4832:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4832:43:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3829,
                  "nodeType": "ExpressionStatement",
                  "src": "4832:43:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3831,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3727,
                          "src": "4893:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 3833,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3832,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3815,
                          "src": "4907:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4893:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "4885:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3835,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:31:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3836,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3723,
                      "src": "4965:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3837,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3817,
                      "src": "4988:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4965:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3839,
                  "nodeType": "ExpressionStatement",
                  "src": "4965:29:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3840,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "5004:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3842,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3817,
                          "src": "5025:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3843,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "5033:20:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3841,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4828,
                        "src": "5016:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5016:38:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5004:50:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3846,
                  "nodeType": "ExpressionStatement",
                  "src": "5004:50:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3848,
                        "name": "lastPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "5086:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3847,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "5069:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3850,
                  "nodeType": "EmitStatement",
                  "src": "5064:32:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3851,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "5106:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5106:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3853,
                  "nodeType": "ExpressionStatement",
                  "src": "5106:17:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5200:29:17",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3854,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "5207:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3856,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3855,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3815,
                        "src": "5221:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5207:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3858,
                  "nodeType": "ExpressionStatement",
                  "src": "5200:29:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3859,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3819,
                    "src": "5239:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 3860,
                  "nodeType": "ExpressionStatement",
                  "src": "5239:5:17"
                }
              ]
            },
            "documentation": "@notice only public for callbacks from oraclize, do not call\n @param queryID of the returning query, this should match our own internal mapping\n @param result query to be processed\n @param proof result proof",
            "id": 3862,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3815,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3862,
                  "src": "4770:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3814,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4770:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3817,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3862,
                  "src": "4787:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3816,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4787:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3819,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 3862,
                  "src": "4802:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3818,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4802:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4769:45:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4822:0:17"
            },
            "scope": 3888,
            "src": "4750:531:17",
            "stateMutability": "nonpayable",
            "superFunction": 4521,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3886,
              "nodeType": "Block",
              "src": "5427:901:17",
              "statements": [
                {
                  "assignments": [
                    3866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3866,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 3887,
                      "src": "6095:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3865,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6095:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3873,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3868,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "6141:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3869,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3716,
                        "src": "6165:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3870,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3718,
                        "src": "6197:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3871,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "6223:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3867,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4583,
                        4614,
                        4649,
                        4682
                      ],
                      "referencedDeclaration": 4649,
                      "src": "6113:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 3872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6113:138:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6095:156:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3875,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "6269:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6280:1:17",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6269:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8186,
                        8187
                      ],
                      "referencedDeclaration": 8186,
                      "src": "6261:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6261:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3879,
                  "nodeType": "ExpressionStatement",
                  "src": "6261:21:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3880,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "6292:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 3882,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3881,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "6306:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6292:22:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6317:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6292:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3885,
                  "nodeType": "ExpressionStatement",
                  "src": "6292:29:17"
                }
              ]
            },
            "documentation": "@dev call to oraclize to set up our query and record its hash.",
            "id": 3887,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5416:2:17"
            },
            "payable": false,
            "returnParameters": {
              "id": 3864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:0:17"
            },
            "scope": 3888,
            "src": "5396:932:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 3889,
        "src": "875:5455:17"
      }
    ],
    "src": "608:5723:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {
        "OrderLib": "0x5374c9b5d0d60e7f58063e02e6fd905ff94c4fb6"
      }
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-16T03:15:00.588Z"
}
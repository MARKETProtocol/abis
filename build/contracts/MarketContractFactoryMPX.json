{
  "contractName": "MarketContractFactoryMPX",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracleHub",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MARKET_COLLATERAL_POOL",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketContractRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "registryAddress",
          "type": "address"
        },
        {
          "name": "collateralPoolAddress",
          "type": "address"
        },
        {
          "name": "oracleHubAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "MarketContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "contractNames",
          "type": "string"
        },
        {
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[7]"
        },
        {
          "name": "oracleURL",
          "type": "string"
        },
        {
          "name": "oracleStatistic",
          "type": "string"
        }
      ],
      "name": "deployMarketContractMPX",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "oracleHubAddress",
          "type": "address"
        }
      ],
      "name": "setOracleHubAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "870:3544:7:-;;;1410:282;8:9:-1;5:2;;;30:1;27;20:12;5:2;1410:282:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:10:17;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;1576:15:7;1551:22;;:40;;;;;;;;;;;;;;;;;;1626:21;1601:22;;:46;;;;;;;;;;;;;;;;;;1669:16;1657:9;;:28;;;;;;;;;;;;;;;;;;1410:282;;;870:3544;;;;;;",
  "deployedSourceMap": "870:3544:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:17;;;;;;965:24:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;965:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;639:70:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:17;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:168:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4244:168:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3846:177:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;995:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;922;;8:9:-1;5:2;;;30:1;27;20:12;5:2;922:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;2977:721;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2977:721:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;965:24:7:-;;;;;;;;;;;;;:::o;639:70:17:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;926:83::-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;4244:168:7:-;824:9:17;:7;:9::i;:::-;816:18;;;;;;;;4364:1:7;4336:30;;:16;:30;;;;4328:39;;;;;;;;4389:16;4377:9;;:28;;;;;;;;;;;;;;;;;;4244:168;:::o;3846:177::-;824:9:17;:7;:9::i;:::-;816:18;;;;;;;;3963:1:7;3936:29;;:15;:29;;;;3928:38;;;;;;;;4001:15;3976:22;;:40;;;;;;;;;;;;;;;;;;3846:177;:::o;995:37::-;;;;;;;;;;;;;:::o;922:::-;;;;;;;;;;;;;:::o;2977:721::-;3198:29;3265:13;;3230:281;;;;;;;;;3306:7;:5;:7::i;:::-;3230:281;;;;;;;;3327:22;3230:281;;;;;;;;3363:22;;;;;;;;;;;3230:281;;;;;;;3413:9;;;;;;;;;;;3436:13;3463:9;;3486:15;;3230:281;;:::i;:::-;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3230:281:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3230:281:7;3198:313;;3554:22;;;;;;;;;;;3522:77;;;3608:11;3522:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3522:99:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3522:99:7;;;;3678:11;3636:55;;3658:10;3636:55;;;;;;;;;;;;2977:721;;;;;;;;;:::o;1561:101:17:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;1796:169::-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;870:3544:7:-;;;;;;;;;;:::o",
  "source": "/*\n    Copyright 2017-2019 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity 0.4.25;\n\nimport \"./MarketContractMPX.sol\";\nimport \"../MarketContractRegistryInterface.sol\";\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\n/// @title MarketContractFactoryMPX\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractFactoryMPX is Ownable {\n\n    address public marketContractRegistry;\n    address public oracleHub;\n    address public MARKET_COLLATERAL_POOL;\n\n    event MarketContractCreated(address indexed creator, address indexed contractAddress);\n\n    /// @dev deploys our factory and ties it to the supplied registry address\n    /// @param registryAddress - address of our MARKET registry\n    /// @param collateralPoolAddress - address of our MARKET Collateral pool\n    /// @param oracleHubAddress - address of the MPX oracle\n    constructor(\n        address registryAddress,\n        address collateralPoolAddress,\n        address oracleHubAddress\n    ) public {\n        marketContractRegistry = registryAddress;\n        MARKET_COLLATERAL_POOL = collateralPoolAddress;\n        oracleHub = oracleHubAddress;\n    }\n\n    /// @dev Deploys a new instance of a market contract and adds it to the whitelist.\n    /// @param contractNames comma separated list of 3 names \"contractName,longTokenSymbol,shortTokenSymbol\"\n    /// @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n    /// @param contractSpecs array of unsigned integers including:\n    ///     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n    ///     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n    ///     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n    ///                             an integer\n    ///     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n    ///     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n    ///     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n    ///     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n    /// @param oracleURL url of data\n    /// @param oracleStatistic statistic type (lastPrice, vwap, etc)\n    function deployMarketContractMPX(\n        string contractNames,\n        address collateralTokenAddress,\n        uint[7] contractSpecs,\n        string oracleURL,\n        string oracleStatistic\n    ) external\n    {\n        MarketContractMPX mktContract = new MarketContractMPX(\n            contractNames,\n            [\n            owner(),\n            collateralTokenAddress,\n            MARKET_COLLATERAL_POOL\n            ],\n            oracleHub,\n            contractSpecs,\n            oracleURL,\n            oracleStatistic\n        );\n\n        MarketContractRegistryInterface(marketContractRegistry).addAddressToWhiteList(address(mktContract));\n        emit MarketContractCreated(msg.sender, address(mktContract));\n    }\n\n    /// @dev allows for the owner to set the desired registry for contract creation.\n    /// @param registryAddress desired registry address.\n    function setRegistryAddress(address registryAddress) external onlyOwner {\n        require(registryAddress != address(0));\n        marketContractRegistry = registryAddress;\n    }\n\n    /// @dev allows for the owner to set a new oracle hub address which is responsible for providing data to our\n    /// contracts\n    /// @param oracleHubAddress   address of the oracle hub, cannot be null address\n    function setOracleHubAddress(address oracleHubAddress) external onlyOwner {\n        require(oracleHubAddress != address(0));\n        oracleHub = oracleHubAddress;\n    }\n}",
  "sourcePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/mpx/MarketContractFactoryMPX.sol",
  "ast": {
    "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/mpx/MarketContractFactoryMPX.sol",
    "exportedSymbols": {
      "MarketContractFactoryMPX": [
        2170
      ]
    },
    "id": 2171,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2041,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:23:7"
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/mpx/MarketContractMPX.sol",
        "file": "./MarketContractMPX.sol",
        "id": 2042,
        "nodeType": "ImportDirective",
        "scope": 2171,
        "sourceUnit": 2299,
        "src": "633:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/MarketContractRegistryInterface.sol",
        "file": "../MarketContractRegistryInterface.sol",
        "id": 2043,
        "nodeType": "ImportDirective",
        "scope": 2171,
        "sourceUnit": 1190,
        "src": "667:48:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2044,
        "nodeType": "ImportDirective",
        "scope": 2171,
        "sourceUnit": 2909,
        "src": "717:63:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2045,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2908,
              "src": "907:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2908",
                "typeString": "contract Ownable"
              }
            },
            "id": 2046,
            "nodeType": "InheritanceSpecifier",
            "src": "907:7:7"
          }
        ],
        "contractDependencies": [
          2298,
          2908
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractFactoryMPX\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2170,
        "linearizedBaseContracts": [
          2170,
          2908
        ],
        "name": "MarketContractFactoryMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2048,
            "name": "marketContractRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 2170,
            "src": "922:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2047,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "922:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2050,
            "name": "oracleHub",
            "nodeType": "VariableDeclaration",
            "scope": 2170,
            "src": "965:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2049,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "965:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2052,
            "name": "MARKET_COLLATERAL_POOL",
            "nodeType": "VariableDeclaration",
            "scope": 2170,
            "src": "995:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2051,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "995:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2058,
            "name": "MarketContractCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2054,
                  "indexed": true,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "1067:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "1092:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1066:58:7"
            },
            "src": "1039:86:7"
          },
          {
            "body": {
              "id": 2079,
              "nodeType": "Block",
              "src": "1541:151:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2067,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "1551:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2068,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2060,
                      "src": "1576:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1551:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:40:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2071,
                      "name": "MARKET_COLLATERAL_POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2052,
                      "src": "1601:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2072,
                      "name": "collateralPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "1626:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1601:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:46:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2075,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "1657:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2076,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2064,
                      "src": "1669:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1657:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "1657:28:7"
                }
              ]
            },
            "documentation": "@dev deploys our factory and ties it to the supplied registry address\n @param registryAddress - address of our MARKET registry\n @param collateralPoolAddress - address of our MARKET Collateral pool\n @param oracleHubAddress - address of the MPX oracle",
            "id": 2080,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "1431:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2062,
                  "name": "collateralPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "1464:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2064,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "1503:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1421:112:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1541:0:7"
            },
            "scope": 2170,
            "src": "1410:282:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2128,
              "nodeType": "Block",
              "src": "3188:510:7",
              "statements": [
                {
                  "assignments": [
                    2096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2096,
                      "name": "mktContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "3198:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                        "typeString": "contract MarketContractMPX"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2095,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2298,
                        "src": "3198:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                          "typeString": "contract MarketContractMPX"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2110,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2099,
                        "name": "contractNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "3265:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2100,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2833,
                              "src": "3306:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3306:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2102,
                            "name": "collateralTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "3327:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2103,
                            "name": "MARKET_COLLATERAL_POOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "3363:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 2104,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3292:107:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2105,
                        "name": "oracleHub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "3413:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2106,
                        "name": "contractSpecs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "3436:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2107,
                        "name": "oracleURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2090,
                        "src": "3463:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2108,
                        "name": "oracleStatistic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2092,
                        "src": "3486:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 2098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3230:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$3_memory_ptr_$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MarketContractMPX_$2298_$",
                        "typeString": "function (string memory,address[3] memory,address,uint256[7] memory,string memory,string memory) returns (contract MarketContractMPX)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2097,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2298,
                        "src": "3234:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                          "typeString": "contract MarketContractMPX"
                        }
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3230:281:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                      "typeString": "contract MarketContractMPX"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3198:313:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2116,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "3608:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3600:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3600:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2112,
                            "name": "marketContractRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2048,
                            "src": "3554:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2111,
                          "name": "MarketContractRegistryInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "3522:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MarketContractRegistryInterface_$1189_$",
                            "typeString": "type(contract MarketContractRegistryInterface)"
                          }
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3522:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractRegistryInterface_$1189",
                          "typeString": "contract MarketContractRegistryInterface"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAddressToWhiteList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "3522:77:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:99:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:99:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3612,
                          "src": "3658:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3658:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2124,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "3678:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3670:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3670:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2120,
                      "name": "MarketContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2058,
                      "src": "3636:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3636:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2127,
                  "nodeType": "EmitStatement",
                  "src": "3631:60:7"
                }
              ]
            },
            "documentation": "@dev Deploys a new instance of a market contract and adds it to the whitelist.\n @param contractNames comma separated list of 3 names \"contractName,longTokenSymbol,shortTokenSymbol\"\n @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 2129,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deployMarketContractMPX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3019:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3049:30:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3049:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3089:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2085,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3089:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2087,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 2086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3094:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3089:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3120:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3120:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2092,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3146:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2091,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3009:165:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:0:7"
            },
            "scope": 2170,
            "src": "2977:721:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2148,
              "nodeType": "Block",
              "src": "3918:105:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2137,
                          "name": "registryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2131,
                          "src": "3936:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3963:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3955:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3955:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3936:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3615,
                        3616
                      ],
                      "referencedDeclaration": 3615,
                      "src": "3928:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2143,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:38:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2144,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "3976:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "4001:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3976:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:40:7"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set the desired registry for contract creation.\n @param registryAddress desired registry address.",
            "id": 2149,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2134,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2133,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2842,
                  "src": "3908:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3908:9:7"
              }
            ],
            "name": "setRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "3874:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3873:25:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3918:0:7"
            },
            "scope": 2170,
            "src": "3846:177:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2168,
              "nodeType": "Block",
              "src": "4318:94:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2157,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2151,
                          "src": "4336:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4364:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4356:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4356:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4336:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3615,
                        3616
                      ],
                      "referencedDeclaration": 3615,
                      "src": "4328:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4328:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2163,
                  "nodeType": "ExpressionStatement",
                  "src": "4328:39:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2164,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "4377:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2165,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2151,
                      "src": "4389:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4377:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2167,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:28:7"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set a new oracle hub address which is responsible for providing data to our\n contracts\n @param oracleHubAddress   address of the oracle hub, cannot be null address",
            "id": 2169,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2153,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2842,
                  "src": "4308:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4308:9:7"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2151,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2169,
                  "src": "4273:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4273:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4272:26:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4318:0:7"
            },
            "scope": 2170,
            "src": "4244:168:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2171,
        "src": "870:3544:7"
      }
    ],
    "src": "608:3806:7"
  },
  "legacyAST": {
    "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/mpx/MarketContractFactoryMPX.sol",
    "exportedSymbols": {
      "MarketContractFactoryMPX": [
        2170
      ]
    },
    "id": 2171,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2041,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:23:7"
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/mpx/MarketContractMPX.sol",
        "file": "./MarketContractMPX.sol",
        "id": 2042,
        "nodeType": "ImportDirective",
        "scope": 2171,
        "sourceUnit": 2299,
        "src": "633:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/travis/build/MARKETProtocol/MARKETProtocol/contracts/MarketContractRegistryInterface.sol",
        "file": "../MarketContractRegistryInterface.sol",
        "id": 2043,
        "nodeType": "ImportDirective",
        "scope": 2171,
        "sourceUnit": 1190,
        "src": "667:48:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2044,
        "nodeType": "ImportDirective",
        "scope": 2171,
        "sourceUnit": 2909,
        "src": "717:63:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2045,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2908,
              "src": "907:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2908",
                "typeString": "contract Ownable"
              }
            },
            "id": 2046,
            "nodeType": "InheritanceSpecifier",
            "src": "907:7:7"
          }
        ],
        "contractDependencies": [
          2298,
          2908
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContractFactoryMPX\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2170,
        "linearizedBaseContracts": [
          2170,
          2908
        ],
        "name": "MarketContractFactoryMPX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2048,
            "name": "marketContractRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 2170,
            "src": "922:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2047,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "922:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2050,
            "name": "oracleHub",
            "nodeType": "VariableDeclaration",
            "scope": 2170,
            "src": "965:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2049,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "965:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2052,
            "name": "MARKET_COLLATERAL_POOL",
            "nodeType": "VariableDeclaration",
            "scope": 2170,
            "src": "995:37:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2051,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "995:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2058,
            "name": "MarketContractCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2054,
                  "indexed": true,
                  "name": "creator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "1067:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "indexed": true,
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "1092:31:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1066:58:7"
            },
            "src": "1039:86:7"
          },
          {
            "body": {
              "id": 2079,
              "nodeType": "Block",
              "src": "1541:151:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2067,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "1551:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2068,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2060,
                      "src": "1576:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1551:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:40:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2071,
                      "name": "MARKET_COLLATERAL_POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2052,
                      "src": "1601:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2072,
                      "name": "collateralPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2062,
                      "src": "1626:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1601:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:46:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2075,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "1657:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2076,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2064,
                      "src": "1669:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1657:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "1657:28:7"
                }
              ]
            },
            "documentation": "@dev deploys our factory and ties it to the supplied registry address\n @param registryAddress - address of our MARKET registry\n @param collateralPoolAddress - address of our MARKET Collateral pool\n @param oracleHubAddress - address of the MPX oracle",
            "id": 2080,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "1431:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2062,
                  "name": "collateralPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "1464:29:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2064,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2080,
                  "src": "1503:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1421:112:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1541:0:7"
            },
            "scope": 2170,
            "src": "1410:282:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2128,
              "nodeType": "Block",
              "src": "3188:510:7",
              "statements": [
                {
                  "assignments": [
                    2096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2096,
                      "name": "mktContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2129,
                      "src": "3198:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                        "typeString": "contract MarketContractMPX"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2095,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2298,
                        "src": "3198:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                          "typeString": "contract MarketContractMPX"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2110,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2099,
                        "name": "contractNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "3265:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2100,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2833,
                              "src": "3306:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3306:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2102,
                            "name": "collateralTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2084,
                            "src": "3327:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2103,
                            "name": "MARKET_COLLATERAL_POOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "3363:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 2104,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3292:107:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2105,
                        "name": "oracleHub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2050,
                        "src": "3413:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2106,
                        "name": "contractSpecs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "3436:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2107,
                        "name": "oracleURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2090,
                        "src": "3463:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2108,
                        "name": "oracleStatistic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2092,
                        "src": "3486:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$3_memory_ptr",
                          "typeString": "address[3] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                          "typeString": "uint256[7] calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 2098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3230:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$3_memory_ptr_$_t_address_$_t_array$_t_uint256_$7_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_MarketContractMPX_$2298_$",
                        "typeString": "function (string memory,address[3] memory,address,uint256[7] memory,string memory,string memory) returns (contract MarketContractMPX)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2097,
                        "name": "MarketContractMPX",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2298,
                        "src": "3234:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                          "typeString": "contract MarketContractMPX"
                        }
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3230:281:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                      "typeString": "contract MarketContractMPX"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3198:313:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2116,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "3608:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3600:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3600:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2112,
                            "name": "marketContractRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2048,
                            "src": "3554:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2111,
                          "name": "MarketContractRegistryInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "3522:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MarketContractRegistryInterface_$1189_$",
                            "typeString": "type(contract MarketContractRegistryInterface)"
                          }
                        },
                        "id": 2113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3522:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketContractRegistryInterface_$1189",
                          "typeString": "contract MarketContractRegistryInterface"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAddressToWhiteList",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1181,
                      "src": "3522:77:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:99:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2119,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:99:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3612,
                          "src": "3658:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3658:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2124,
                            "name": "mktContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "3678:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MarketContractMPX_$2298",
                              "typeString": "contract MarketContractMPX"
                            }
                          ],
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3670:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3670:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2120,
                      "name": "MarketContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2058,
                      "src": "3636:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3636:55:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2127,
                  "nodeType": "EmitStatement",
                  "src": "3631:60:7"
                }
              ]
            },
            "documentation": "@dev Deploys a new instance of a market contract and adds it to the whitelist.\n @param contractNames comma separated list of 3 names \"contractName,longTokenSymbol,shortTokenSymbol\"\n @param collateralTokenAddress address of the ERC20 token that will be used for collateral and pricing\n @param contractSpecs array of unsigned integers including:\n     floorPrice              minimum tradeable price of this contract, contract enters settlement if breached\n     capPrice                maximum tradeable price of this contract, contract enters settlement if breached\n     priceDecimalPlaces      number of decimal places to convert our queried price from a floating point to\n                             an integer\n     qtyMultiplier           multiply traded qty by this value from base units of collateral token.\n     feeInBasisPoints    fee amount in basis points (Collateral token denominated) for minting.\n     mktFeeInBasisPoints fee amount in basis points (MKT denominated) for minting.\n     expirationTimeStamp     seconds from epoch that this contract expires and enters settlement\n @param oracleURL url of data\n @param oracleStatistic statistic type (lastPrice, vwap, etc)",
            "id": 2129,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deployMarketContractMPX",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2082,
                  "name": "contractNames",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3019:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2081,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2084,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3049:30:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3049:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3089:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$7_calldata_ptr",
                    "typeString": "uint256[7]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2085,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3089:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2087,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 2086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3094:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "7"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "3089:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
                      "typeString": "uint256[7]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "name": "oracleURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3120:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3120:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2092,
                  "name": "oracleStatistic",
                  "nodeType": "VariableDeclaration",
                  "scope": 2129,
                  "src": "3146:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2091,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3009:165:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:0:7"
            },
            "scope": 2170,
            "src": "2977:721:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2148,
              "nodeType": "Block",
              "src": "3918:105:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2137,
                          "name": "registryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2131,
                          "src": "3936:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3963:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3955:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3955:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3936:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3615,
                        3616
                      ],
                      "referencedDeclaration": 3615,
                      "src": "3928:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2143,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:38:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2144,
                      "name": "marketContractRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2048,
                      "src": "3976:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "registryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "4001:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3976:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2147,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:40:7"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set the desired registry for contract creation.\n @param registryAddress desired registry address.",
            "id": 2149,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2134,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2133,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2842,
                  "src": "3908:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3908:9:7"
              }
            ],
            "name": "setRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "name": "registryAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "3874:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3873:25:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3918:0:7"
            },
            "scope": 2170,
            "src": "3846:177:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2168,
              "nodeType": "Block",
              "src": "4318:94:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2157,
                          "name": "oracleHubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2151,
                          "src": "4336:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4364:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4356:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4356:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4336:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3615,
                        3616
                      ],
                      "referencedDeclaration": 3615,
                      "src": "4328:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4328:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2163,
                  "nodeType": "ExpressionStatement",
                  "src": "4328:39:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2164,
                      "name": "oracleHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2050,
                      "src": "4377:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2165,
                      "name": "oracleHubAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2151,
                      "src": "4389:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4377:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2167,
                  "nodeType": "ExpressionStatement",
                  "src": "4377:28:7"
                }
              ]
            },
            "documentation": "@dev allows for the owner to set a new oracle hub address which is responsible for providing data to our\n contracts\n @param oracleHubAddress   address of the oracle hub, cannot be null address",
            "id": 2169,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2153,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2842,
                  "src": "4308:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4308:9:7"
              }
            ],
            "name": "setOracleHubAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2151,
                  "name": "oracleHubAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2169,
                  "src": "4273:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4273:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4272:26:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4318:0:7"
            },
            "scope": 2170,
            "src": "4244:168:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2171,
        "src": "870:3544:7"
      }
    ],
    "src": "608:3806:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x38ee3ff13b5d3453452a79e0799d83b2c8207bf126b2798fa512343680f643ee": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "creator",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "name": "MarketContractCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {
        "MathLib": "0xfe8b5bcf5aca9c0d0648aa19567301737888ac3c"
      },
      "address": "0x9da155d7d386f081b9afd0a1c2a99e5e56e837fe",
      "transactionHash": "0xa30d34c6f9c01e1fefb2150342b4d3cd36c59c28c7fb99045b0aa5c04e8d1d21"
    }
  },
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-04-10T20:47:20.803Z"
}